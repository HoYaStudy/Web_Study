{"version":3,"sources":["Assets/noPoster.png","Components/Header.js","api.js","Components/Loader.js","Components/Message.js","Components/Section.js","Components/Poster.js","Routes/Home/HomePresenter.js","Routes/Home/index.js","Routes/Home/HomeContainer.js","Routes/TV/TVPresenter.js","Routes/TV/index.js","Routes/TV/TVContainer.js","Routes/Search/SearchPresenter.js","Routes/Search/index.js","Routes/Search/SearchContainer.js","Routes/Detail/DetailPresenter.js","Routes/Detail/index.js","Routes/Detail/DetailContainer.js","Components/Router.js","Components/GlobalStyles.js","Components/App.js","index.js"],"names":["module","exports","Header","styled","header","List","ul","Item","li","props","current","SLink","Link","withRouter","pathname","location","to","api","axios","create","baseURL","params","api_key","language","movieApi","get","id","append_to_response","term","query","encodeURIComponent","tvApi","Container","div","role","aria-label","icon","faHourglass","Text","span","color","Message","text","Title","Grid","Section","title","children","Image","bgUrl","Rating","ImageContainer","Year","Poster","imageUrl","rating","year","isMovie","require","faStar","style","length","substring","HomePresenter","nowPlaying","upcoming","popular","loading","error","Helmet","Loader","map","movie","key","original_title","poster_path","vote_average","release_date","HomeContainer","state","data","results","this","setState","React","Component","TVPresenter","topRated","airingToday","tv","original_name","first_air_date","TVContainer","Form","form","Input","input","SearchPresenter","searchTerm","movieResults","tvResults","handleSubmit","updateTerm","onSubmit","placeholder","value","onChange","SearchContainer","event","preventDefault","searchByTerm","target","a","Backdrop","bgImage","Content","Cover","Data","h3","ItemContainer","VoteContainer","Divider","Overview","p","Vote","rows","i","push","fasStar","farStar","DetailPresenter","result","backdrop_path","runtime","episode_run_time","genres","genre","index","name","Math","round","overview","DetailContainer","includes","match","history","parseId","Number","isNaN","path","exact","component","Home","TV","Search","Detail","from","globalStyles","createGlobalStyle","reset","App","Router","GlobalStyles","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.cff365af.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/noPoster.ff4cebf1.png\";","import React from \"react\";\r\nimport { Link, withRouter } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Header = styled.header`\r\n  display: flex;\r\n  align-items: center;\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 50px;\r\n  padding: 0px 10px;\r\n  color: white;\r\n  background-color: rgba(20, 20, 20, 1);\r\n  box-shadow: 0px 1px 5px 2px rgba(0, 0, 0, 0.8);\r\n  z-index: 10;\r\n`;\r\n\r\nconst List = styled.ul`\r\n  display: flex;\r\n`;\r\n\r\nconst Item = styled.li`\r\n  width: 80px;\r\n  height: 50px;\r\n  border-bottom: 3px solid\r\n    ${(props) => (props.current ? \"#3498db\" : \"transparent\")};\r\n  text-align: center;\r\n  transition: border-bottom 0.3s ease-in-out;\r\n`;\r\n\r\nconst SLink = styled(Link)`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  height: 50px;\r\n`;\r\n\r\nexport default withRouter(({ location: { pathname } }) => (\r\n  <Header>\r\n    <List>\r\n      <Item current={pathname === \"/\"}>\r\n        <SLink to=\"/\">Movie</SLink>\r\n      </Item>\r\n      <Item current={pathname === \"/tv\"}>\r\n        <SLink to=\"/tv\">TV</SLink>\r\n      </Item>\r\n      <Item current={pathname === \"/search\"}>\r\n        <SLink to=\"/search\">Search</SLink>\r\n      </Item>\r\n    </List>\r\n  </Header>\r\n));\r\n","import axios from \"axios\";\r\n\r\nconst api = axios.create({\r\n  baseURL: \"https://api.themoviedb.org/3/\",\r\n  params: {\r\n    api_key: \"10923b261ba94d897ac6b81148314a3f\",\r\n    language: \"en-US\",\r\n  },\r\n});\r\n\r\nexport const movieApi = {\r\n  nowPlaying: () => api.get(\"movie/now_playing\"),\r\n  upcoming: () => api.get(\"movie/upcoming\"),\r\n  popular: () => api.get(\"movie/popular\"),\r\n  movieDetail: (id) =>\r\n    api.get(`movie/${id}`, {\r\n      params: {\r\n        append_to_response: \"videos\",\r\n      },\r\n    }),\r\n  search: (term) =>\r\n    api.get(\"search/movie\", {\r\n      params: {\r\n        query: encodeURIComponent(term),\r\n      },\r\n    }),\r\n};\r\n\r\nexport const tvApi = {\r\n  topRated: () => api.get(\"tv/top_rated\"),\r\n  popular: () => api.get(\"tv/popular\"),\r\n  airingToday: () => api.get(\"tv/airing_today\"),\r\n  tvDetail: (id) =>\r\n    api.get(`tv/${id}`, {\r\n      params: {\r\n        append_to_response: \"videos\",\r\n      },\r\n    }),\r\n  search: (term) =>\r\n    api.get(\"search/tv\", {\r\n      params: {\r\n        query: encodeURIComponent(term),\r\n      },\r\n    }),\r\n};\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faHourglass } from \"@fortawesome/free-regular-svg-icons\";\r\n\r\nconst Container = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  width: 100vw;\r\n  height: 100vh;\r\n  margin-top: 20px;\r\n  font-size: 28px;\r\n`;\r\n\r\nexport default () => (\r\n  <Container>\r\n    <span role=\"img\" aria-label=\"Loading\">\r\n      <FontAwesomeIcon icon={faHourglass} />\r\n    </span>\r\n  </Container>\r\n);\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Container = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  width: 100%;\r\n`;\r\n\r\nconst Text = styled.span`\r\n  color: ${(props) => props.color};\r\n`;\r\n\r\nconst Message = ({ text, color }) => (\r\n  <Container>\r\n    <Text color={color}>{text}</Text>\r\n  </Container>\r\n);\r\n\r\nMessage.propTypes = {\r\n  text: PropTypes.string.isRequired,\r\n  color: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Message;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Container = styled.div`\r\n  :not(:last-child) {\r\n    margin-bottom: 50px;\r\n  }\r\n`;\r\n\r\nconst Title = styled.span`\r\n  font-size: 16px;\r\n  font-weight: 600;\r\n`;\r\n\r\nconst Grid = styled.div`\r\n  display: grid;\r\n  grid-template-columns: repeat(auto-fill, 125px);\r\n  grid-gap: 25px;\r\n  margin-top: 25px;\r\n`;\r\n\r\nconst Section = ({ title, children }) => (\r\n  <Container>\r\n    <Title>{title}</Title>\r\n    <Grid>{children}</Grid>\r\n  </Container>\r\n);\r\n\r\nSection.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  children: PropTypes.oneOfType([\r\n    PropTypes.arrayOf(PropTypes.node),\r\n    PropTypes.node,\r\n  ]),\r\n};\r\n\r\nexport default Section;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faStar } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst Container = styled.div`\r\n  font-size: 12px;\r\n`;\r\n\r\nconst Image = styled.div`\r\n  height: 180px;\r\n  border-radius: 4px;\r\n  background-image: url(${(props) => props.bgUrl});\r\n  background-size: cover;\r\n  background-position: center center;\r\n\r\n  transition: opacity 0.1s linear;\r\n`;\r\n\r\nconst Rating = styled.span`\r\n  position: absolute;\r\n  right: 5px;\r\n  bottom: 5px;\r\n  opacity: 0;\r\n`;\r\n\r\nconst ImageContainer = styled.div`\r\n  position: relative;\r\n  margin-bottom: 5px;\r\n  &:hover {\r\n    ${Image} {\r\n      opacity: 0.3;\r\n    }\r\n    ${Rating} {\r\n      opacity: 1;\r\n    }\r\n  }\r\n`;\r\n\r\nconst Title = styled.span`\r\n  display: block;\r\n  margin-bottom: 3px;\r\n`;\r\n\r\nconst Year = styled.span`\r\n  font-size: 10px;\r\n  color: rgba(255, 255, 255, 0.5);\r\n`;\r\n\r\nconst Poster = ({ id, title, imageUrl, rating, year, isMovie = false }) => (\r\n  <Link to={isMovie ? `/movie/${id}` : `/tv/${id}`}>\r\n    <Container>\r\n      <ImageContainer>\r\n        <Image\r\n          bgUrl={\r\n            imageUrl\r\n              ? `https://image.tmdb.org/t/p/w300${imageUrl}`\r\n              : require(\"../Assets/noPoster.png\")\r\n          }\r\n        />\r\n        <Rating>\r\n          <span role=\"img\" aria-label=\"rating\">\r\n            <FontAwesomeIcon icon={faStar} style={{ color: \"gold\" }} />\r\n          </span>{\" \"}\r\n          {rating}/10\r\n        </Rating>\r\n      </ImageContainer>\r\n      <Title>\r\n        {title.length > 18 ? `${title.substring(0, 18)}...` : title}\r\n      </Title>\r\n      <Year>{year}</Year>\r\n    </Container>\r\n  </Link>\r\n);\r\n\r\nPoster.propTypes = {\r\n  id: PropTypes.number.isRequired,\r\n  imageUrl: PropTypes.string,\r\n  title: PropTypes.string.isRequired,\r\n  rating: PropTypes.number,\r\n  year: PropTypes.string,\r\n  isMovie: PropTypes.bool,\r\n};\r\n\r\nexport default Poster;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\nimport Helmet from \"react-helmet\";\r\nimport Loader from \"../../Components/Loader\";\r\nimport Message from \"../../Components/Message\";\r\nimport Section from \"../../Components/Section\";\r\nimport Poster from \"../../Components/Poster\";\r\n\r\nconst Container = styled.div`\r\n  padding: 20px;\r\n`;\r\n\r\nconst HomePresenter = ({ nowPlaying, upcoming, popular, loading, error }) => (\r\n  <>\r\n    <Helmet>\r\n      <title>Movie | hMovieApp</title>\r\n    </Helmet>\r\n    {loading ? (\r\n      <Loader />\r\n    ) : (\r\n      <Container>\r\n        {nowPlaying && nowPlaying.length > 0 && (\r\n          <Section title=\"Now Playing Movies\">\r\n            {nowPlaying.map((movie) => (\r\n              <Poster\r\n                key={movie.id}\r\n                id={movie.id}\r\n                title={movie.original_title}\r\n                imageUrl={movie.poster_path}\r\n                rating={movie.vote_average}\r\n                year={movie.release_date && movie.release_date.substring(0, 4)}\r\n                isMovie={true}\r\n              />\r\n            ))}\r\n          </Section>\r\n        )}\r\n        {upcoming && upcoming.length > 0 && (\r\n          <Section title=\"Upcoming Movies\">\r\n            {upcoming.map((movie) => (\r\n              <Poster\r\n                key={movie.id}\r\n                id={movie.id}\r\n                title={movie.original_title}\r\n                imageUrl={movie.poster_path}\r\n                rating={movie.vote_average}\r\n                year={movie.release_date && movie.release_date.substring(0, 4)}\r\n                isMovie={true}\r\n              />\r\n            ))}\r\n          </Section>\r\n        )}\r\n        {popular && popular.length > 0 && (\r\n          <Section title=\"Popular Movies\">\r\n            {popular.map((movie) => (\r\n              <Poster\r\n                key={movie.id}\r\n                id={movie.id}\r\n                title={movie.original_title}\r\n                imageUrl={movie.poster_path}\r\n                rating={movie.vote_average}\r\n                year={movie.release_date && movie.release_date.substring(0, 4)}\r\n                isMovie={true}\r\n              />\r\n            ))}\r\n          </Section>\r\n        )}\r\n        {error && <Message text={error} color=\"#e74c3c\" />}\r\n      </Container>\r\n    )}\r\n  </>\r\n);\r\n\r\nHomePresenter.propTypes = {\r\n  nowPlaying: PropTypes.array,\r\n  upcoming: PropTypes.array,\r\n  popular: PropTypes.array,\r\n  loading: PropTypes.bool.isRequired,\r\n  error: PropTypes.string,\r\n};\r\n\r\nexport default HomePresenter;\r\n","import HomeContainer from \"./HomeContainer\";\r\n\r\nexport default HomeContainer;\r\n","import React from \"react\";\r\nimport { movieApi } from \"api\";\r\nimport HomePresenter from \"./HomePresenter\";\r\n\r\nexport default class extends React.Component {\r\n  state = {\r\n    nowPlaying: null,\r\n    upcoming: null,\r\n    popular: null,\r\n    loading: true,\r\n    error: null,\r\n  };\r\n\r\n  async componentDidMount() {\r\n    try {\r\n      const {\r\n        data: { results: nowPlaying },\r\n      } = await movieApi.nowPlaying();\r\n      const {\r\n        data: { results: upcoming },\r\n      } = await movieApi.upcoming();\r\n      const {\r\n        data: { results: popular },\r\n      } = await movieApi.popular();\r\n      this.setState({\r\n        nowPlaying,\r\n        upcoming,\r\n        popular,\r\n      });\r\n    } catch {\r\n      this.setState({\r\n        error: \"Can't find Movie information\",\r\n      });\r\n    } finally {\r\n      this.setState({\r\n        loading: false,\r\n      });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { nowPlaying, upcoming, popular, loading, error } = this.state;\r\n    return (\r\n      <HomePresenter\r\n        nowPlaying={nowPlaying}\r\n        upcoming={upcoming}\r\n        popular={popular}\r\n        loading={loading}\r\n        error={error}\r\n      />\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\nimport Helmet from \"react-helmet\";\r\nimport Loader from \"../../Components/Loader\";\r\nimport Message from \"../../Components/Message\";\r\nimport Section from \"../../Components/Section\";\r\nimport Poster from \"../../Components/Poster\";\r\n\r\nconst Container = styled.div`\r\n  padding: 20px;\r\n`;\r\n\r\nconst TVPresenter = ({ topRated, popular, airingToday, loading, error }) => (\r\n  <>\r\n    <Helmet>\r\n      <title>Movie | hMovieApp</title>\r\n    </Helmet>\r\n    {loading ? (\r\n      <Loader />\r\n    ) : (\r\n      <Container>\r\n        <Helmet>\r\n          <title>TV | hMovieApp</title>\r\n        </Helmet>\r\n        {topRated && topRated.length > 0 && (\r\n          <Section title=\"Top Rated TV Shows\">\r\n            {topRated.map((tv) => (\r\n              <Poster\r\n                key={tv.id}\r\n                id={tv.id}\r\n                title={tv.original_name}\r\n                imageUrl={tv.poster_path}\r\n                rating={tv.vote_average}\r\n                year={tv.first_air_date && tv.first_air_date.substring(0, 4)}\r\n              />\r\n            ))}\r\n          </Section>\r\n        )}\r\n        {popular && popular.length > 0 && (\r\n          <Section title=\"Popular TV Shows\">\r\n            {popular.map((tv) => (\r\n              <Poster\r\n                key={tv.id}\r\n                id={tv.id}\r\n                title={tv.original_name}\r\n                imageUrl={tv.poster_path}\r\n                rating={tv.vote_average}\r\n                year={tv.first_air_date && tv.first_air_date.substring(0, 4)}\r\n              />\r\n            ))}\r\n          </Section>\r\n        )}\r\n        {airingToday && airingToday.length > 0 && (\r\n          <Section title=\"Airing Today TV Shows\">\r\n            {airingToday.map((tv) => (\r\n              <Poster\r\n                key={tv.id}\r\n                id={tv.id}\r\n                title={tv.original_name}\r\n                imageUrl={tv.poster_path}\r\n                rating={tv.vote_average}\r\n                year={tv.first_air_date && tv.first_air_date.substring(0, 4)}\r\n              />\r\n            ))}\r\n          </Section>\r\n        )}\r\n        {error && <Message text={error} color=\"#e74c3c\" />}\r\n      </Container>\r\n    )}\r\n  </>\r\n);\r\n\r\nTVPresenter.propTypes = {\r\n  topRated: PropTypes.array,\r\n  popular: PropTypes.array,\r\n  airingToday: PropTypes.array,\r\n  loading: PropTypes.bool.isRequired,\r\n  error: PropTypes.string,\r\n};\r\n\r\nexport default TVPresenter;\r\n","import TVContainer from \"./TVContainer\";\r\n\r\nexport default TVContainer;\r\n","import React from \"react\";\r\nimport { tvApi } from \"api\";\r\nimport TVPresenter from \"./TVPresenter\";\r\n\r\nexport default class extends React.Component {\r\n  state = {\r\n    topRated: null,\r\n    popular: null,\r\n    airingToday: null,\r\n    loading: true,\r\n    error: null,\r\n  };\r\n\r\n  async componentDidMount() {\r\n    try {\r\n      const {\r\n        data: { results: topRated },\r\n      } = await tvApi.topRated();\r\n      const {\r\n        data: { results: popular },\r\n      } = await tvApi.popular();\r\n      const {\r\n        data: { results: airingToday },\r\n      } = await tvApi.airingToday();\r\n      this.setState({\r\n        topRated,\r\n        popular,\r\n        airingToday,\r\n      });\r\n    } catch {\r\n      this.setState({\r\n        error: \"Can't find TV information\",\r\n      });\r\n    } finally {\r\n      this.setState({\r\n        loading: false,\r\n      });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { topRated, popular, airingToday, loading, error } = this.state;\r\n    return (\r\n      <TVPresenter\r\n        topRated={topRated}\r\n        popular={popular}\r\n        airingToday={airingToday}\r\n        loading={loading}\r\n        error={error}\r\n      />\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\nimport Helmet from \"react-helmet\";\r\nimport Loader from \"../../Components/Loader\";\r\nimport Message from \"../../Components/Message\";\r\nimport Section from \"../../Components/Section\";\r\nimport Poster from \"../../Components/Poster\";\r\n\r\nconst Container = styled.div`\r\n  padding: 20px;\r\n`;\r\n\r\nconst Form = styled.form`\r\n  width: 100%;\r\n  margin-bottom: 50px;\r\n`;\r\n\r\nconst Input = styled.input`\r\n  all: unset;\r\n  width: 100%;\r\n  font-size: 28px;\r\n`;\r\n\r\nconst SearchPresenter = ({\r\n  searchTerm,\r\n  movieResults,\r\n  tvResults,\r\n  loading,\r\n  error,\r\n  handleSubmit,\r\n  updateTerm,\r\n}) => (\r\n  <Container>\r\n    <Helmet>\r\n      <title>Search | hMovieApp</title>\r\n    </Helmet>\r\n    <Form onSubmit={handleSubmit}>\r\n      <Input\r\n        placeholder=\"Search Movie or TV Show...\"\r\n        value={searchTerm}\r\n        onChange={updateTerm}\r\n      />\r\n    </Form>\r\n    {loading ? (\r\n      <Loader />\r\n    ) : (\r\n      <>\r\n        {movieResults && movieResults.length > 0 && (\r\n          <Section title=\"Movie Results\">\r\n            {movieResults.map((movie) => (\r\n              <Poster\r\n                key={movie.id}\r\n                id={movie.id}\r\n                title={movie.original_title}\r\n                imageUrl={movie.poster_path}\r\n                rating={movie.vote_average}\r\n                year={movie.release_date && movie.release_date.substring(0, 4)}\r\n                isMovie={true}\r\n              />\r\n            ))}\r\n          </Section>\r\n        )}\r\n        {tvResults && tvResults.length > 0 && (\r\n          <Section title=\"TV Results\">\r\n            {tvResults.map((tv) => (\r\n              <Poster\r\n                key={tv.id}\r\n                id={tv.id}\r\n                title={tv.original_name}\r\n                imageUrl={tv.poster_path}\r\n                rating={tv.vote_average}\r\n                year={tv.first_air_date && tv.first_air_date.substring(0, 4)}\r\n              />\r\n            ))}\r\n          </Section>\r\n        )}\r\n        {error && <Message text={error} color=\"#e74c3c\" />}\r\n        {tvResults &&\r\n          movieResults &&\r\n          tvResults.length === 0 &&\r\n          movieResults.length === 0 && (\r\n            <Message text=\"Nothing Found\" color=\"#95a5a6\" />\r\n          )}\r\n      </>\r\n    )}\r\n  </Container>\r\n);\r\n\r\nSearchPresenter.propTypes = {\r\n  searchTerm: PropTypes.string,\r\n  movieResults: PropTypes.array,\r\n  tvResults: PropTypes.array,\r\n  loading: PropTypes.bool.isRequired,\r\n  error: PropTypes.string,\r\n  handleSubmit: PropTypes.func.isRequired,\r\n  updateTerm: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default SearchPresenter;\r\n","import SearchContainer from \"./SearchContainer\";\r\n\r\nexport default SearchContainer;\r\n","import React from \"react\";\r\nimport { movieApi, tvApi } from \"../../api\";\r\nimport SearchPresenter from \"./SearchPresenter\";\r\n\r\nexport default class extends React.Component {\r\n  state = {\r\n    searchTerm: \"\",\r\n    movieResults: null,\r\n    tvResults: null,\r\n    loading: false,\r\n    error: null,\r\n  };\r\n\r\n  handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    const { searchTerm } = this.state;\r\n    if (searchTerm !== \"\") {\r\n      this.searchByTerm();\r\n    }\r\n  };\r\n\r\n  updateTerm = (event) => {\r\n    const {\r\n      target: { value },\r\n    } = event;\r\n    this.setState({ searchTerm: value });\r\n  };\r\n\r\n  searchByTerm = async () => {\r\n    const { searchTerm } = this.state;\r\n    this.setState({ loading: true });\r\n    try {\r\n      const {\r\n        data: { results: movieResults },\r\n      } = await movieApi.search(searchTerm);\r\n      const {\r\n        data: { results: tvResults },\r\n      } = await tvApi.search(searchTerm);\r\n      this.setState({ movieResults, tvResults });\r\n    } catch {\r\n      this.setState({ error: \"Can't find result\" });\r\n    } finally {\r\n      this.setState({ loading: false });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { searchTerm, movieResults, tvResults, loading, error } = this.state;\r\n    return (\r\n      <SearchPresenter\r\n        searchTerm={searchTerm}\r\n        movieResults={movieResults}\r\n        tvResults={tvResults}\r\n        loading={loading}\r\n        error={error}\r\n        handleSubmit={this.handleSubmit}\r\n        updateTerm={this.updateTerm}\r\n      />\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\nimport Helmet from \"react-helmet\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faStar as fasStar } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { faStar as farStar } from \"@fortawesome/free-regular-svg-icons\";\r\nimport Loader from \"../../Components/Loader\";\r\nimport Message from \"../../Components/Message\";\r\n\r\nconst Container = styled.div`\r\n  position: relative;\r\n  width: 100%;\r\n  height: calc(100vh - 80px);\r\n  padding: 50px;\r\n`;\r\n\r\nconst Backdrop = styled.div`\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 100%;\r\n  background-image: url(${(props) => props.bgImage});\r\n  background-position: center center;\r\n  background-size: cover;\r\n  filter: blur(3px);\r\n  opacity: 0.5;\r\n`;\r\n\r\nconst Content = styled.div`\r\n  display: flex;\r\n  position: relative;\r\n  width: 100%;\r\n  height: 100%;\r\n  z-index: 1;\r\n`;\r\n\r\nconst Cover = styled.div`\r\n  width: 30%;\r\n  height: 100%;\r\n  border-radius: 5px;\r\n  background-image: url(${(props) => props.bgImage});\r\n  background-position: center center;\r\n  background-size: cover;\r\n`;\r\n\r\nconst Data = styled.div`\r\n  width: 70%;\r\n  margin-left: 10px;\r\n`;\r\n\r\nconst Title = styled.h3`\r\n  font-size: 32px;\r\n`;\r\n\r\nconst ItemContainer = styled.div`\r\n  display: flex;\r\n  margin: 20px 0;\r\n`;\r\n\r\nconst Item = styled.span``;\r\n\r\nconst VoteContainer = styled.div``;\r\n\r\nconst Divider = styled.span`\r\n  margin: 0 10px;\r\n`;\r\n\r\nconst Overview = styled.p`\r\n  width: 50%;\r\n  font-size: 12px;\r\n  line-height: 1.5;\r\n  opacity: 0.7;\r\n`;\r\n\r\nconst Vote = ({ rating }) => {\r\n  let rows = [];\r\n  for (let i = 0; i < 5; ++i) {\r\n    if (i < rating) {\r\n      rows.push(\r\n        <FontAwesomeIcon key={i} icon={fasStar} style={{ color: \"gold\" }} />\r\n      );\r\n    } else {\r\n      rows.push(\r\n        <FontAwesomeIcon key={i} icon={farStar} style={{ color: \"gold\" }} />\r\n      );\r\n    }\r\n  }\r\n  return rows;\r\n};\r\n\r\nconst DetailPresenter = ({ result, loading, error }) =>\r\n  loading ? (\r\n    <>\r\n      <Helmet>\r\n        <title>Loading | hMovieApp</title>\r\n      </Helmet>\r\n      <Loader />\r\n    </>\r\n  ) : error ? (\r\n    <Message text={error} color=\"#e74c3c\"></Message>\r\n  ) : (\r\n    <Container>\r\n      <Helmet>\r\n        <title>\r\n          {result.original_title ? result.original_title : result.original_name}{\" \"}\r\n          | hMovieApp\r\n        </title>\r\n      </Helmet>\r\n      <Backdrop\r\n        bgImage={`https://image.tmdb.org/t/p/original${result.backdrop_path}`}\r\n      />\r\n      <Content>\r\n        <Cover\r\n          bgImage={\r\n            result.poster_path\r\n              ? `https://image.tmdb.org/t/p/original${result.poster_path}`\r\n              : require(\"../../Assets/noPoster.png\")\r\n          }\r\n        ></Cover>\r\n        <Data>\r\n          <Title>\r\n            {result.original_title\r\n              ? result.original_title\r\n              : result.original_name}\r\n          </Title>\r\n          <ItemContainer>\r\n            <Item>\r\n              {result.release_date\r\n                ? result.release_date.substring(0, 4)\r\n                : result.first_air_date.substring(0, 4)}\r\n            </Item>\r\n            <Divider>\u0007</Divider>\r\n            <Item>\r\n              {result.runtime ? result.runtime : result.episode_run_time[0]} min\r\n            </Item>\r\n            <Divider>\u0007</Divider>\r\n            <Item>\r\n              {result.genres &&\r\n                result.genres.map((genre, index) =>\r\n                  index === result.genres.length - 1\r\n                    ? genre.name\r\n                    : `${genre.name} / `\r\n                )}\r\n            </Item>\r\n            <Divider>\u0007</Divider>\r\n            <VoteContainer title={result.vote_average}>\r\n              <Vote rating={Math.round(result.vote_average / 2)} />\r\n            </VoteContainer>\r\n          </ItemContainer>\r\n          <Overview>{result.overview}</Overview>\r\n        </Data>\r\n      </Content>\r\n    </Container>\r\n  );\r\n\r\nDetailPresenter.propTypes = {\r\n  result: PropTypes.object,\r\n  loading: PropTypes.bool.isRequired,\r\n  error: PropTypes.string,\r\n};\r\n\r\nexport default DetailPresenter;\r\n","import DetailContainer from \"./DetailContainer\";\r\n\r\nexport default DetailContainer;\r\n","import React from \"react\";\r\nimport DetailPresenter from \"./DetailPresenter\";\r\nimport { movieApi, tvApi } from \"../../api\";\r\n\r\nexport default class extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    const {\r\n      location: { pathname },\r\n    } = props;\r\n    this.state = {\r\n      result: null,\r\n      isMovie: pathname.includes(\"/movie/\"),\r\n      loading: true,\r\n      error: null,\r\n    };\r\n  }\r\n\r\n  async componentDidMount() {\r\n    const {\r\n      match: {\r\n        params: { id },\r\n      },\r\n      history: { push },\r\n    } = this.props;\r\n    const parseId = Number(id);\r\n    if (isNaN(parseId)) {\r\n      return push(\"/\");\r\n    }\r\n\r\n    let result = null;\r\n    try {\r\n      const { isMovie } = this.state;\r\n      if (isMovie) {\r\n        ({ data: result } = await movieApi.movieDetail(parseId));\r\n      } else {\r\n        ({ data: result } = await tvApi.tvDetail(parseId));\r\n      }\r\n    } catch {\r\n      this.setState({ error: \"Can't find anything\" });\r\n    } finally {\r\n      this.setState({ result, loading: false });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { result, loading, error } = this.state;\r\n    return <DetailPresenter result={result} loading={loading} error={error} />;\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport {\r\n  BrowserRouter as Router,\r\n  Redirect,\r\n  Route,\r\n  Switch,\r\n} from \"react-router-dom\";\r\nimport Header from \"Components/Header\";\r\nimport Home from \"Routes/Home\";\r\nimport TV from \"Routes/TV\";\r\nimport Search from \"Routes/Search\";\r\nimport Detail from \"Routes/Detail\";\r\n\r\nexport default () => (\r\n  <Router>\r\n    <>\r\n      <Header />\r\n      <Switch>\r\n        <Route path=\"/\" exact component={Home} />\r\n        <Route path=\"/tv\" exact component={TV} />\r\n        <Route path=\"/search\" component={Search} />\r\n        <Route path=\"/movie/:id\" component={Detail} />\r\n        <Route path=\"/tv/:id\" component={Detail} />\r\n\r\n        <Redirect from=\"*\" to=\"/\" />\r\n      </Switch>\r\n    </>\r\n  </Router>\r\n);\r\n","import { createGlobalStyle } from \"styled-components\";\r\nimport reset from \"styled-reset\";\r\n\r\nconst globalStyles = createGlobalStyle`\r\n  ${reset};\r\n  a {\r\n    text-decoration: none;\r\n    color: inherit;\r\n  }\r\n  * {\r\n    box-sizing: border-box;\r\n  }\r\n  body {\r\n    padding-top: 50px;\r\n    color: white;\r\n    background-color: rgba(20, 20, 20, 1);\r\n    font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\r\n    font-size: 14px;\r\n  }\r\n`;\r\n\r\nexport default globalStyles;\r\n","import React from \"react\";\nimport Router from \"Components/Router\";\nimport GlobalStyles from \"Components/GlobalStyles\";\n\nfunction App() {\n  return (\n    <>\n      <Router />\n      <GlobalStyles />\n    </>\n  );\n}\n\nexport default App;\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"Components/App\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n"],"sourceRoot":""}