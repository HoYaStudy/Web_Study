{"version":3,"sources":["Assets/noPoster.png","Components/Header.js","api.js","Components/Loader.js","Components/Message.js","Components/Section.js","Components/Poster.js","Components/useTitle.js","Routes/Home/HomePresenter.js","Routes/Home/index.js","Routes/Home/HomeContainer.js","Routes/TV/TVPresenter.js","Routes/TV/index.js","Routes/TV/TVContainer.js","Routes/Search/SearchPresenter.js","Routes/Search/index.js","Routes/Search/SearchContainer.js","Components/Collection.js","Components/Season.js","Routes/Detail/DetailPresenter.js","Routes/Detail/index.js","Routes/Detail/DetailContainer.js","Routes/Collection/CollectionPresenter.js","Routes/Collection/index.js","Routes/Collection/CollectionContainer.js","Routes/Season/SeasonPresenter.js","Routes/Season/index.js","Routes/Season/SeasonContainer.js","Components/Router.js","Components/GlobalStyles.js","Components/App.js","index.js"],"names":["module","exports","Header","styled","header","List","ul","Item","li","props","current","SLink","Link","withRouter","pathname","location","to","api","axios","create","baseURL","params","api_key","language","movieApi","get","id","append_to_response","term","query","tvApi","num","Container","div","role","aria-label","icon","faHourglass","Text","span","color","Message","text","Title","Grid","Section","title","children","Image","bgUrl","Rating","ImageContainer","Year","Poster","imageUrl","rating","year","isMovie","isLink","require","faStar","style","toPrecision","length","substring","useTitle","initialTitle","useState","setTitle","useEffect","document","querySelector","innerText","HomePresenter","nowPlaying","upcoming","popular","loading","error","Loader","map","movie","key","original_title","poster_path","vote_average","release_date","HomeContainer","state","data","results","this","setState","React","Component","TVPresenter","topRated","airingToday","tv","original_name","first_air_date","TVContainer","Form","form","Input","input","SearchPresenter","searchTerm","movieResults","tvResults","handleSubmit","updateTerm","onSubmit","placeholder","value","onChange","SearchContainer","event","preventDefault","searchByTerm","target","a","Collection","Season","Backdrop","bgImage","Content","Cover","Data","h3","IMDB","ItemContainer","VoteContainer","Divider","OverviewContainer","Overview","p","clamp","OverviewButton","Subtitle","Video","SeasonContainer","Vote","rows","i","push","fasStar","farStar","DetailPresenter","result","setClamp","titleUpdater","hasOwnProperty","backdrop_path","href","imdb_id","external_ids","faImdb","runtime","episode_run_time","genres","genre","index","name","Math","round","onClick","overview","faCaretDown","production_companies","elem","production_countries","iso_3166_1","origin_country","status","videos","width","src","allow","allowFullScreen","faVideoSlash","fontSize","belongs_to_collection","seasons","season_number","DetailContainer","includes","match","history","parseId","Number","isNaN","CollectionPresenter","parts","sort","b","CollectionContainer","episodes","still_path","air_date","parseNum","SeasonPresenter","path","exact","component","Home","TV","Search","Detail","from","globalStyles","createGlobalStyle","reset","App","Router","GlobalStyles","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.1f81b3d2.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/noPoster.ff4cebf1.png\";","import React from \"react\";\r\nimport { Link, withRouter } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Header = styled.header`\r\n  display: flex;\r\n  align-items: center;\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 50px;\r\n  padding: 0px 10px;\r\n  color: white;\r\n  background-color: rgba(20, 20, 20, 1);\r\n  box-shadow: 0px 1px 5px 2px rgba(0, 0, 0, 0.8);\r\n  z-index: 10;\r\n`;\r\n\r\nconst List = styled.ul`\r\n  display: flex;\r\n`;\r\n\r\nconst Item = styled.li`\r\n  width: 80px;\r\n  height: 50px;\r\n  border-bottom: 3px solid\r\n    ${(props) => (props.current ? \"#3498db\" : \"transparent\")};\r\n  text-align: center;\r\n  transition: border-bottom 0.3s ease-in-out;\r\n`;\r\n\r\nconst SLink = styled(Link)`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  height: 50px;\r\n`;\r\n\r\nexport default withRouter(({ location: { pathname } }) => (\r\n  <Header>\r\n    <List>\r\n      <Item current={pathname === \"/\"}>\r\n        <SLink to=\"/\">Movie</SLink>\r\n      </Item>\r\n      <Item current={pathname === \"/tv\"}>\r\n        <SLink to=\"/tv\">TV</SLink>\r\n      </Item>\r\n      <Item current={pathname === \"/search\"}>\r\n        <SLink to=\"/search\">Search</SLink>\r\n      </Item>\r\n    </List>\r\n  </Header>\r\n));\r\n","import axios from \"axios\";\r\n\r\nconst api = axios.create({\r\n  baseURL: \"https://api.themoviedb.org/3/\",\r\n  params: {\r\n    api_key: \"10923b261ba94d897ac6b81148314a3f\",\r\n    language: \"en-US\",\r\n  },\r\n});\r\n\r\nexport const movieApi = {\r\n  nowPlaying: () => api.get(\"movie/now_playing\"),\r\n  upcoming: () => api.get(\"movie/upcoming\"),\r\n  popular: () => api.get(\"movie/popular\"),\r\n  movieDetail: (id) =>\r\n    api.get(`movie/${id}`, {\r\n      params: {\r\n        append_to_response: \"videos\",\r\n      },\r\n    }),\r\n  search: (term) =>\r\n    api.get(\"search/movie\", {\r\n      params: {\r\n        query: term,\r\n      },\r\n    }),\r\n  collection: (id) => api.get(`collection/${id}`),\r\n};\r\n\r\nexport const tvApi = {\r\n  topRated: () => api.get(\"tv/top_rated\"),\r\n  popular: () => api.get(\"tv/popular\"),\r\n  airingToday: () => api.get(\"tv/airing_today\"),\r\n  tvDetail: (id) =>\r\n    api.get(`tv/${id}`, {\r\n      params: {\r\n        append_to_response: \"videos,external_ids\",\r\n      },\r\n    }),\r\n  search: (term) =>\r\n    api.get(\"search/tv\", {\r\n      params: {\r\n        query: term,\r\n      },\r\n    }),\r\n  season: (id, num) => api.get(`tv/${id}/season/${num}`),\r\n};\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faHourglass } from \"@fortawesome/free-regular-svg-icons\";\r\n\r\nconst Container = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  width: 100vw;\r\n  height: 100vh;\r\n  margin-top: 20px;\r\n  font-size: 28px;\r\n`;\r\n\r\nexport default () => (\r\n  <Container>\r\n    <span role=\"img\" aria-label=\"Loading\">\r\n      <FontAwesomeIcon icon={faHourglass} />\r\n    </span>\r\n  </Container>\r\n);\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Container = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  width: 100%;\r\n`;\r\n\r\nconst Text = styled.span`\r\n  color: ${(props) => props.color};\r\n`;\r\n\r\nconst Message = ({ text, color }) => (\r\n  <Container>\r\n    <Text color={color}>{text}</Text>\r\n  </Container>\r\n);\r\n\r\nMessage.propTypes = {\r\n  text: PropTypes.string.isRequired,\r\n  color: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Message;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Container = styled.div`\r\n  :not(:last-child) {\r\n    margin-bottom: 50px;\r\n  }\r\n`;\r\n\r\nconst Title = styled.span`\r\n  font-size: 16px;\r\n  font-weight: 600;\r\n`;\r\n\r\nconst Grid = styled.div`\r\n  display: grid;\r\n  grid-template-columns: repeat(auto-fill, 125px);\r\n  grid-gap: 25px;\r\n  margin-top: 25px;\r\n`;\r\n\r\nconst Section = ({ title, children }) => (\r\n  <Container>\r\n    <Title>{title}</Title>\r\n    <Grid>{children}</Grid>\r\n  </Container>\r\n);\r\n\r\nSection.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  children: PropTypes.oneOfType([\r\n    PropTypes.arrayOf(PropTypes.node),\r\n    PropTypes.node,\r\n  ]),\r\n};\r\n\r\nexport default Section;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faStar } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst Container = styled.div`\r\n  font-size: 12px;\r\n`;\r\n\r\nconst Image = styled.div`\r\n  height: 180px;\r\n  border-radius: 4px;\r\n  background-image: url(${(props) => props.bgUrl});\r\n  background-size: cover;\r\n  background-position: center center;\r\n\r\n  transition: opacity 0.1s linear;\r\n`;\r\n\r\nconst Rating = styled.span`\r\n  position: absolute;\r\n  right: 5px;\r\n  bottom: 5px;\r\n  opacity: 0;\r\n`;\r\n\r\nconst ImageContainer = styled.div`\r\n  position: relative;\r\n  margin-bottom: 5px;\r\n  &:hover {\r\n    ${Image} {\r\n      opacity: 0.3;\r\n    }\r\n    ${Rating} {\r\n      opacity: 1;\r\n    }\r\n  }\r\n`;\r\n\r\nconst Title = styled.span`\r\n  display: block;\r\n  margin-bottom: 3px;\r\n`;\r\n\r\nconst Year = styled.span`\r\n  font-size: 10px;\r\n  color: rgba(255, 255, 255, 0.5);\r\n`;\r\n\r\nconst Poster = ({\r\n  id,\r\n  title,\r\n  imageUrl,\r\n  rating,\r\n  year,\r\n  isMovie = false,\r\n  isLink = true,\r\n}) =>\r\n  isLink ? (\r\n    <Link to={isMovie ? `/movie/${id}` : `/tv/${id}`}>\r\n      <Container>\r\n        <ImageContainer>\r\n          <Image\r\n            bgUrl={\r\n              imageUrl\r\n                ? `https://image.tmdb.org/t/p/w300${imageUrl}`\r\n                : require(\"../Assets/noPoster.png\")\r\n            }\r\n          />\r\n          <Rating>\r\n            <span role=\"img\" aria-label=\"rating\">\r\n              <FontAwesomeIcon icon={faStar} style={{ color: \"gold\" }} />\r\n            </span>{\" \"}\r\n            {rating.toPrecision(2)}/10\r\n          </Rating>\r\n        </ImageContainer>\r\n        <Title>\r\n          {title.length > 18 ? `${title.substring(0, 18)}...` : title}\r\n        </Title>\r\n        <Year>{year}</Year>\r\n      </Container>\r\n    </Link>\r\n  ) : (\r\n    <Container>\r\n      <ImageContainer>\r\n        <Image\r\n          bgUrl={\r\n            imageUrl\r\n              ? `https://image.tmdb.org/t/p/w300${imageUrl}`\r\n              : require(\"../Assets/noPoster.png\")\r\n          }\r\n        />\r\n        <Rating>\r\n          <span role=\"img\" aria-label=\"rating\">\r\n            <FontAwesomeIcon icon={faStar} style={{ color: \"gold\" }} />\r\n          </span>{\" \"}\r\n          {rating.toPrecision(2)}/10\r\n        </Rating>\r\n      </ImageContainer>\r\n      <Title>\r\n        {title.length > 18 ? `${title.substring(0, 18)}...` : title}\r\n      </Title>\r\n      <Year>{year}</Year>\r\n    </Container>\r\n  );\r\n\r\nPoster.propTypes = {\r\n  id: PropTypes.number.isRequired,\r\n  imageUrl: PropTypes.string,\r\n  title: PropTypes.string.isRequired,\r\n  rating: PropTypes.number,\r\n  year: PropTypes.string,\r\n  isMovie: PropTypes.bool,\r\n};\r\n\r\nexport default Poster;\r\n","import { useState, useEffect } from \"react\";\r\n\r\nexport const useTitle = (initialTitle) => {\r\n  const [title, setTitle] = useState(initialTitle);\r\n  const updateTitle = () => {\r\n    const htmlTitle = document.querySelector(\"title\");\r\n    htmlTitle.innerText = title;\r\n  };\r\n  useEffect(updateTitle, [title]);\r\n  return setTitle;\r\n};\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\nimport Loader from \"../../Components/Loader\";\r\nimport Message from \"../../Components/Message\";\r\nimport Section from \"../../Components/Section\";\r\nimport Poster from \"../../Components/Poster\";\r\nimport { useTitle } from \"../../Components/useTitle\";\r\n\r\nconst Container = styled.div`\r\n  padding: 20px;\r\n`;\r\n\r\nconst HomePresenter = ({ nowPlaying, upcoming, popular, loading, error }) => {\r\n  useTitle(\"Movie | hMovieApp\");\r\n  return (\r\n    <>\r\n      {loading ? (\r\n        <Loader />\r\n      ) : (\r\n        <Container>\r\n          {nowPlaying && nowPlaying.length > 0 && (\r\n            <Section title=\"Now Playing Movies\">\r\n              {nowPlaying.map((movie) => (\r\n                <Poster\r\n                  key={movie.id}\r\n                  id={movie.id}\r\n                  title={movie.original_title}\r\n                  imageUrl={movie.poster_path}\r\n                  rating={movie.vote_average}\r\n                  year={\r\n                    movie.release_date && movie.release_date.substring(0, 4)\r\n                  }\r\n                  isMovie={true}\r\n                />\r\n              ))}\r\n            </Section>\r\n          )}\r\n          {upcoming && upcoming.length > 0 && (\r\n            <Section title=\"Upcoming Movies\">\r\n              {upcoming.map((movie) => (\r\n                <Poster\r\n                  key={movie.id}\r\n                  id={movie.id}\r\n                  title={movie.original_title}\r\n                  imageUrl={movie.poster_path}\r\n                  rating={movie.vote_average}\r\n                  year={\r\n                    movie.release_date && movie.release_date.substring(0, 4)\r\n                  }\r\n                  isMovie={true}\r\n                />\r\n              ))}\r\n            </Section>\r\n          )}\r\n          {popular && popular.length > 0 && (\r\n            <Section title=\"Popular Movies\">\r\n              {popular.map((movie) => (\r\n                <Poster\r\n                  key={movie.id}\r\n                  id={movie.id}\r\n                  title={movie.original_title}\r\n                  imageUrl={movie.poster_path}\r\n                  rating={movie.vote_average}\r\n                  year={\r\n                    movie.release_date && movie.release_date.substring(0, 4)\r\n                  }\r\n                  isMovie={true}\r\n                />\r\n              ))}\r\n            </Section>\r\n          )}\r\n          {error && <Message text={error} color=\"#e74c3c\" />}\r\n        </Container>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nHomePresenter.propTypes = {\r\n  nowPlaying: PropTypes.array,\r\n  upcoming: PropTypes.array,\r\n  popular: PropTypes.array,\r\n  loading: PropTypes.bool.isRequired,\r\n  error: PropTypes.string,\r\n};\r\n\r\nexport default HomePresenter;\r\n","import HomeContainer from \"./HomeContainer\";\r\n\r\nexport default HomeContainer;\r\n","import React from \"react\";\r\nimport { movieApi } from \"api\";\r\nimport HomePresenter from \"./HomePresenter\";\r\n\r\nexport default class extends React.Component {\r\n  state = {\r\n    nowPlaying: null,\r\n    upcoming: null,\r\n    popular: null,\r\n    loading: true,\r\n    error: null,\r\n  };\r\n\r\n  async componentDidMount() {\r\n    try {\r\n      const {\r\n        data: { results: nowPlaying },\r\n      } = await movieApi.nowPlaying();\r\n      const {\r\n        data: { results: upcoming },\r\n      } = await movieApi.upcoming();\r\n      const {\r\n        data: { results: popular },\r\n      } = await movieApi.popular();\r\n      this.setState({\r\n        nowPlaying,\r\n        upcoming,\r\n        popular,\r\n      });\r\n    } catch {\r\n      this.setState({\r\n        error: \"Can't find Movie information\",\r\n      });\r\n    } finally {\r\n      this.setState({\r\n        loading: false,\r\n      });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { nowPlaying, upcoming, popular, loading, error } = this.state;\r\n    return (\r\n      <HomePresenter\r\n        nowPlaying={nowPlaying}\r\n        upcoming={upcoming}\r\n        popular={popular}\r\n        loading={loading}\r\n        error={error}\r\n      />\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\nimport Loader from \"../../Components/Loader\";\r\nimport Message from \"../../Components/Message\";\r\nimport Section from \"../../Components/Section\";\r\nimport Poster from \"../../Components/Poster\";\r\nimport { useTitle } from \"../../Components/useTitle\";\r\n\r\nconst Container = styled.div`\r\n  padding: 20px;\r\n`;\r\n\r\nconst TVPresenter = ({ topRated, popular, airingToday, loading, error }) => {\r\n  useTitle(\"TV | hMovieApp\");\r\n  return (\r\n    <>\r\n      {loading ? (\r\n        <Loader />\r\n      ) : (\r\n        <Container>\r\n          {topRated && topRated.length > 0 && (\r\n            <Section title=\"Top Rated TV Shows\">\r\n              {topRated.map((tv) => (\r\n                <Poster\r\n                  key={tv.id}\r\n                  id={tv.id}\r\n                  title={tv.original_name}\r\n                  imageUrl={tv.poster_path}\r\n                  rating={tv.vote_average}\r\n                  year={tv.first_air_date && tv.first_air_date.substring(0, 4)}\r\n                />\r\n              ))}\r\n            </Section>\r\n          )}\r\n          {popular && popular.length > 0 && (\r\n            <Section title=\"Popular TV Shows\">\r\n              {popular.map((tv) => (\r\n                <Poster\r\n                  key={tv.id}\r\n                  id={tv.id}\r\n                  title={tv.original_name}\r\n                  imageUrl={tv.poster_path}\r\n                  rating={tv.vote_average}\r\n                  year={tv.first_air_date && tv.first_air_date.substring(0, 4)}\r\n                />\r\n              ))}\r\n            </Section>\r\n          )}\r\n          {airingToday && airingToday.length > 0 && (\r\n            <Section title=\"Airing Today TV Shows\">\r\n              {airingToday.map((tv) => (\r\n                <Poster\r\n                  key={tv.id}\r\n                  id={tv.id}\r\n                  title={tv.original_name}\r\n                  imageUrl={tv.poster_path}\r\n                  rating={tv.vote_average}\r\n                  year={tv.first_air_date && tv.first_air_date.substring(0, 4)}\r\n                />\r\n              ))}\r\n            </Section>\r\n          )}\r\n          {error && <Message text={error} color=\"#e74c3c\" />}\r\n        </Container>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nTVPresenter.propTypes = {\r\n  topRated: PropTypes.array,\r\n  popular: PropTypes.array,\r\n  airingToday: PropTypes.array,\r\n  loading: PropTypes.bool.isRequired,\r\n  error: PropTypes.string,\r\n};\r\n\r\nexport default TVPresenter;\r\n","import TVContainer from \"./TVContainer\";\r\n\r\nexport default TVContainer;\r\n","import React from \"react\";\r\nimport { tvApi } from \"api\";\r\nimport TVPresenter from \"./TVPresenter\";\r\n\r\nexport default class extends React.Component {\r\n  state = {\r\n    topRated: null,\r\n    popular: null,\r\n    airingToday: null,\r\n    loading: true,\r\n    error: null,\r\n  };\r\n\r\n  async componentDidMount() {\r\n    try {\r\n      const {\r\n        data: { results: topRated },\r\n      } = await tvApi.topRated();\r\n      const {\r\n        data: { results: popular },\r\n      } = await tvApi.popular();\r\n      const {\r\n        data: { results: airingToday },\r\n      } = await tvApi.airingToday();\r\n      this.setState({\r\n        topRated,\r\n        popular,\r\n        airingToday,\r\n      });\r\n    } catch {\r\n      this.setState({\r\n        error: \"Can't find TV information\",\r\n      });\r\n    } finally {\r\n      this.setState({\r\n        loading: false,\r\n      });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { topRated, popular, airingToday, loading, error } = this.state;\r\n    return (\r\n      <TVPresenter\r\n        topRated={topRated}\r\n        popular={popular}\r\n        airingToday={airingToday}\r\n        loading={loading}\r\n        error={error}\r\n      />\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\nimport Loader from \"../../Components/Loader\";\r\nimport Message from \"../../Components/Message\";\r\nimport Section from \"../../Components/Section\";\r\nimport Poster from \"../../Components/Poster\";\r\nimport { useTitle } from \"../../Components/useTitle\";\r\n\r\nconst Container = styled.div`\r\n  padding: 20px;\r\n`;\r\n\r\nconst Form = styled.form`\r\n  width: 100%;\r\n  margin-bottom: 50px;\r\n`;\r\n\r\nconst Input = styled.input`\r\n  all: unset;\r\n  width: 100%;\r\n  font-size: 28px;\r\n`;\r\n\r\nconst SearchPresenter = ({\r\n  searchTerm,\r\n  movieResults,\r\n  tvResults,\r\n  loading,\r\n  error,\r\n  handleSubmit,\r\n  updateTerm,\r\n}) => {\r\n  useTitle(\"Search | hMovieApp\");\r\n  return (\r\n    <Container>\r\n      <Form onSubmit={handleSubmit}>\r\n        <Input\r\n          placeholder=\"Search Movie or TV Show...\"\r\n          value={searchTerm}\r\n          onChange={updateTerm}\r\n        />\r\n      </Form>\r\n      {loading ? (\r\n        <Loader />\r\n      ) : (\r\n        <>\r\n          {movieResults && movieResults.length > 0 && (\r\n            <Section title=\"Movie Results\">\r\n              {movieResults.map((movie) => (\r\n                <Poster\r\n                  key={movie.id}\r\n                  id={movie.id}\r\n                  title={movie.original_title}\r\n                  imageUrl={movie.poster_path}\r\n                  rating={movie.vote_average}\r\n                  year={\r\n                    movie.release_date && movie.release_date.substring(0, 4)\r\n                  }\r\n                  isMovie={true}\r\n                />\r\n              ))}\r\n            </Section>\r\n          )}\r\n          {tvResults && tvResults.length > 0 && (\r\n            <Section title=\"TV Results\">\r\n              {tvResults.map((tv) => (\r\n                <Poster\r\n                  key={tv.id}\r\n                  id={tv.id}\r\n                  title={tv.original_name}\r\n                  imageUrl={tv.poster_path}\r\n                  rating={tv.vote_average}\r\n                  year={tv.first_air_date && tv.first_air_date.substring(0, 4)}\r\n                />\r\n              ))}\r\n            </Section>\r\n          )}\r\n          {error && <Message text={error} color=\"#e74c3c\" />}\r\n          {tvResults &&\r\n            movieResults &&\r\n            tvResults.length === 0 &&\r\n            movieResults.length === 0 && (\r\n              <Message text=\"Nothing Found\" color=\"#95a5a6\" />\r\n            )}\r\n        </>\r\n      )}\r\n    </Container>\r\n  );\r\n};\r\n\r\nSearchPresenter.propTypes = {\r\n  searchTerm: PropTypes.string,\r\n  movieResults: PropTypes.array,\r\n  tvResults: PropTypes.array,\r\n  loading: PropTypes.bool.isRequired,\r\n  error: PropTypes.string,\r\n  handleSubmit: PropTypes.func.isRequired,\r\n  updateTerm: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default SearchPresenter;\r\n","import SearchContainer from \"./SearchContainer\";\r\n\r\nexport default SearchContainer;\r\n","import React from \"react\";\r\nimport { movieApi, tvApi } from \"../../api\";\r\nimport SearchPresenter from \"./SearchPresenter\";\r\n\r\nexport default class extends React.Component {\r\n  state = {\r\n    searchTerm: \"\",\r\n    movieResults: null,\r\n    tvResults: null,\r\n    loading: false,\r\n    error: null,\r\n  };\r\n\r\n  handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    const { searchTerm } = this.state;\r\n    if (searchTerm !== \"\") {\r\n      this.searchByTerm();\r\n    }\r\n  };\r\n\r\n  updateTerm = (event) => {\r\n    const {\r\n      target: { value },\r\n    } = event;\r\n    this.setState({ searchTerm: value });\r\n  };\r\n\r\n  searchByTerm = async () => {\r\n    const { searchTerm } = this.state;\r\n    this.setState({ loading: true });\r\n    try {\r\n      const {\r\n        data: { results: movieResults },\r\n      } = await movieApi.search(searchTerm);\r\n      const {\r\n        data: { results: tvResults },\r\n      } = await tvApi.search(searchTerm);\r\n      this.setState({ movieResults, tvResults });\r\n    } catch {\r\n      this.setState({ error: \"Can't find result\" });\r\n    } finally {\r\n      this.setState({ loading: false });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { searchTerm, movieResults, tvResults, loading, error } = this.state;\r\n    return (\r\n      <SearchPresenter\r\n        searchTerm={searchTerm}\r\n        movieResults={movieResults}\r\n        tvResults={tvResults}\r\n        loading={loading}\r\n        error={error}\r\n        handleSubmit={this.handleSubmit}\r\n        updateTerm={this.updateTerm}\r\n      />\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Container = styled.div`\r\n  font-size: 18px;\r\n  margin-bottom: 20px;\r\n`;\r\n\r\nconst Title = styled.div`\r\n  margin-bottom: 10px;\r\n`;\r\n\r\nconst Image = styled.div`\r\n  width: 200px;\r\n  height: 300px;\r\n  border-radius: 4px;\r\n  background-image: url(${(props) => props.bgUrl});\r\n  background-size: cover;\r\n  background-position: center center;\r\n`;\r\n\r\nconst Collection = ({ id, title, imageUrl }) => (\r\n  <Container>\r\n    <Title>{title}</Title>\r\n    <Link to={`/collection/${id}`}>\r\n      <Image\r\n        bgUrl={\r\n          imageUrl\r\n            ? `https://image.tmdb.org/t/p/w300${imageUrl}`\r\n            : require(\"../Assets/noPoster.png\")\r\n        }\r\n      />\r\n    </Link>\r\n  </Container>\r\n);\r\n\r\nCollection.propTypes = {\r\n  id: PropTypes.number.isRequired,\r\n  imageUrl: PropTypes.string,\r\n  title: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Collection;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Container = styled.div`\r\n  font-size: 18px;\r\n  margin-right: 20px;\r\n  margin-bottom: 20px;\r\n`;\r\n\r\nconst Title = styled.div`\r\n  margin-bottom: 10px;\r\n`;\r\n\r\nconst Image = styled.div`\r\n  width: 200px;\r\n  height: 300px;\r\n  border-radius: 4px;\r\n  background-image: url(${(props) => props.bgUrl});\r\n  background-size: cover;\r\n  background-position: center center;\r\n`;\r\n\r\nconst Season = ({ id, num, title, imageUrl }) => (\r\n  <Container>\r\n    <Title>{title}</Title>\r\n    <Link to={`/tv/${id}/season/${num}`}>\r\n      <Image\r\n        bgUrl={\r\n          imageUrl\r\n            ? `https://image.tmdb.org/t/p/w300${imageUrl}`\r\n            : require(\"../Assets/noPoster.png\")\r\n        }\r\n      />\r\n    </Link>\r\n  </Container>\r\n);\r\n\r\nSeason.propTypes = {\r\n  id: PropTypes.number.isRequired,\r\n  num: PropTypes.number.isRequired,\r\n  imageUrl: PropTypes.string,\r\n  title: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Season;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n  faStar as fasStar,\r\n  faVideoSlash,\r\n  faCaretDown,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nimport { faStar as farStar } from \"@fortawesome/free-regular-svg-icons\";\r\nimport { faImdb } from \"@fortawesome/free-brands-svg-icons\";\r\nimport Loader from \"../../Components/Loader\";\r\nimport Message from \"../../Components/Message\";\r\nimport Collection from \"../../Components/Collection\";\r\nimport Season from \"../../Components/Season\";\r\nimport { useTitle } from \"../../Components/useTitle\";\r\n\r\nconst Container = styled.div`\r\n  position: relative;\r\n  width: 100%;\r\n  height: calc(100vh - 80px);\r\n  padding: 50px;\r\n`;\r\n\r\nconst Backdrop = styled.div`\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 100%;\r\n  background-image: url(${(props) => props.bgImage});\r\n  background-position: center center;\r\n  background-size: cover;\r\n  filter: blur(3px);\r\n  opacity: 0.5;\r\n`;\r\n\r\nconst Content = styled.div`\r\n  display: flex;\r\n  position: relative;\r\n  width: 100%;\r\n  height: 100%;\r\n  z-index: 1;\r\n`;\r\n\r\nconst Cover = styled.div`\r\n  width: 30%;\r\n  height: 100%;\r\n  border-radius: 5px;\r\n  background-image: url(${(props) => props.bgImage});\r\n  background-position: center center;\r\n  background-size: cover;\r\n`;\r\n\r\nconst Data = styled.div`\r\n  width: 70%;\r\n  margin-left: 10px;\r\n`;\r\n\r\nconst Title = styled.h3`\r\n  font-size: 32px;\r\n`;\r\n\r\nconst IMDB = styled.a`\r\n  margin-left: 5px;\r\n`;\r\n\r\nconst ItemContainer = styled.div`\r\n  display: flex;\r\n  margin: 20px 0;\r\n`;\r\n\r\nconst Item = styled.span``;\r\n\r\nconst VoteContainer = styled.div``;\r\n\r\nconst Divider = styled.span`\r\n  margin: 0 10px;\r\n`;\r\n\r\nconst OverviewContainer = styled.div`\r\n  display: flex;\r\n  align-items: flex-start;\r\n  opacity: 0.7;\r\n`;\r\n\r\nconst Overview = styled.p`\r\n  display: -webkit-box;\r\n  -webkit-box-orient: vertical;\r\n  -webkit-line-clamp: ${(props) => (props.clamp ? 3 : \"none\")};\r\n  width: 50%;\r\n  font-size: 12px;\r\n  line-height: 1.5;\r\n  overflow: hidden;\r\n`;\r\n\r\nconst OverviewButton = styled.div`\r\n  transform: ${(props) => (props.clamp ? \"rotateX(0deg)\" : \"rotateX(180deg)\")};\r\n  transition: transform 0.2s ease-in-out;\r\n`;\r\n\r\nconst Subtitle = styled.div`\r\n  margin: 20px 0px;\r\n  font-size: 28px;\r\n`;\r\n\r\nconst Video = styled.div`\r\n  display: flex;\r\n  & > iframe {\r\n    margin-right: 20px;\r\n  }\r\n`;\r\n\r\nconst SeasonContainer = styled.div`\r\n  display: flex;\r\n`;\r\n\r\nconst Vote = ({ rating }) => {\r\n  let rows = [];\r\n  for (let i = 0; i < 5; ++i) {\r\n    if (i < rating) {\r\n      rows.push(\r\n        <FontAwesomeIcon key={i} icon={fasStar} style={{ color: \"gold\" }} />\r\n      );\r\n    } else {\r\n      rows.push(\r\n        <FontAwesomeIcon key={i} icon={farStar} style={{ color: \"gold\" }} />\r\n      );\r\n    }\r\n  }\r\n  return rows;\r\n};\r\n\r\nconst DetailPresenter = ({ result, loading, error }) => {\r\n  const [clamp, setClamp] = useState(true);\r\n  const titleUpdater = useTitle(\"Loading | hMovieApp\");\r\n\r\n  useEffect(() => {\r\n    loading\r\n      ? titleUpdater(\"Loading | hMovieApp\")\r\n      : titleUpdater(\r\n          `${\r\n            result\r\n              ? result.original_title\r\n                ? result.original_title\r\n                : result.original_name\r\n              : \"N/A\"\r\n          } | hMovieApp`\r\n        );\r\n  }, [loading, result, titleUpdater]);\r\n\r\n  return loading ? (\r\n    <Loader />\r\n  ) : error ? (\r\n    <Message text={error} color=\"#e74c3c\"></Message>\r\n  ) : (\r\n    <Container>\r\n      {result.hasOwnProperty(\"backdrop_path\") && result.backdrop_path ? (\r\n        <Backdrop\r\n          bgImage={`https://image.tmdb.org/t/p/original${result.backdrop_path}`}\r\n        />\r\n      ) : (\r\n        <p></p>\r\n      )}\r\n      <Content>\r\n        <Cover\r\n          bgImage={\r\n            result.poster_path\r\n              ? `https://image.tmdb.org/t/p/original${result.poster_path}`\r\n              : require(\"../../Assets/noPoster.png\")\r\n          }\r\n        />\r\n        <Data>\r\n          <Title>\r\n            {result.original_title\r\n              ? result.original_title\r\n              : result.original_name}\r\n            <IMDB\r\n              href={`https://www.imdb.com/title/${\r\n                result.hasOwnProperty(\"imdb_id\")\r\n                  ? result.imdb_id\r\n                  : result.external_ids.imdb_id\r\n              }`}\r\n              target=\"_blank\"\r\n            >\r\n              <FontAwesomeIcon icon={faImdb} style={{ color: \"gold\" }} />\r\n            </IMDB>\r\n          </Title>\r\n          <ItemContainer>\r\n            <Item>\r\n              {result.release_date\r\n                ? result.release_date.substring(0, 4)\r\n                : result.first_air_date.substring(0, 4)}\r\n            </Item>\r\n            <Divider>\u0007</Divider>\r\n            <Item>\r\n              {result.hasOwnProperty(\"runtime\")\r\n                ? result.runtime\r\n                : result.episode_run_time[0]}{\" \"}\r\n              min\r\n            </Item>\r\n            <Divider>\u0007</Divider>\r\n            <Item>\r\n              {result.genres &&\r\n                result.genres.map((genre, index) =>\r\n                  index === result.genres.length - 1\r\n                    ? genre.name\r\n                    : `${genre.name} / `\r\n                )}\r\n            </Item>\r\n            <Divider>\u0007</Divider>\r\n            <VoteContainer title={result.vote_average}>\r\n              <Vote rating={Math.round(result.vote_average / 2)} />\r\n            </VoteContainer>\r\n          </ItemContainer>\r\n          <OverviewContainer\r\n            onClick={() => {\r\n              setClamp(!clamp);\r\n            }}\r\n          >\r\n            <Overview clamp={clamp}>{result.overview}</Overview>\r\n            {result && result.overview.length > 180 ? (\r\n              <OverviewButton clamp={clamp}>\r\n                <FontAwesomeIcon icon={faCaretDown} />\r\n              </OverviewButton>\r\n            ) : (\r\n              <div />\r\n            )}\r\n          </OverviewContainer>\r\n          <ItemContainer>\r\n            <Item>\r\n              {result.production_companies[0]\r\n                ? result.production_companies.map((elem, index) =>\r\n                    index === result.production_companies.length - 1\r\n                      ? elem.name\r\n                      : `${elem.name} / `\r\n                  )\r\n                : \"N/A\"}\r\n            </Item>\r\n            <Divider>\u0007</Divider>\r\n            <Item>\r\n              {result.production_countries\r\n                ? result.production_countries[0]\r\n                  ? result.production_countries[0].iso_3166_1\r\n                  : \"N/A\"\r\n                : result.origin_country[0]}\r\n            </Item>\r\n            <Divider>\u0007</Divider>\r\n            <Item>{result.status}</Item>\r\n          </ItemContainer>\r\n          <Subtitle>Video</Subtitle>\r\n          <Video>\r\n            {result.videos.results[0] ? (\r\n              result.videos.results.map((elem) => (\r\n                <iframe\r\n                  key={`${elem.id}`}\r\n                  title=\"video\"\r\n                  width=\"350px\"\r\n                  src={`https://www.youtube.com/embed/${elem.key}`}\r\n                  allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\"\r\n                  allowFullScreen\r\n                ></iframe>\r\n              ))\r\n            ) : (\r\n              <FontAwesomeIcon\r\n                icon={faVideoSlash}\r\n                style={{ fontSize: \"72px\", color: \"silver\" }}\r\n              />\r\n            )}\r\n          </Video>\r\n          {result.belongs_to_collection && (\r\n            <>\r\n              <Subtitle>Collection</Subtitle>\r\n              <Collection\r\n                id={result.belongs_to_collection.id}\r\n                title={result.belongs_to_collection.name}\r\n                imageUrl={result.belongs_to_collection.poster_path}\r\n              />\r\n            </>\r\n          )}\r\n          {result.seasons && (\r\n            <>\r\n              <Subtitle>Season</Subtitle>\r\n              <SeasonContainer>\r\n                {result.seasons.map((elem) => (\r\n                  <Season\r\n                    key={elem.id}\r\n                    id={result.id}\r\n                    num={elem.season_number}\r\n                    title={elem.name}\r\n                    imageUrl={elem.poster_path}\r\n                  />\r\n                ))}\r\n              </SeasonContainer>\r\n            </>\r\n          )}\r\n        </Data>\r\n      </Content>\r\n    </Container>\r\n  );\r\n};\r\n\r\nDetailPresenter.propTypes = {\r\n  result: PropTypes.object,\r\n  loading: PropTypes.bool.isRequired,\r\n  error: PropTypes.string,\r\n};\r\n\r\nexport default DetailPresenter;\r\n","import DetailContainer from \"./DetailContainer\";\r\n\r\nexport default DetailContainer;\r\n","import React from \"react\";\r\nimport DetailPresenter from \"./DetailPresenter\";\r\nimport { movieApi, tvApi } from \"../../api\";\r\n\r\nexport default class extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    const {\r\n      location: { pathname },\r\n    } = props;\r\n    this.state = {\r\n      result: null,\r\n      isMovie: pathname.includes(\"/movie/\"),\r\n      loading: true,\r\n      error: null,\r\n    };\r\n  }\r\n\r\n  async componentDidMount() {\r\n    const {\r\n      match: {\r\n        params: { id },\r\n      },\r\n      history: { push },\r\n    } = this.props;\r\n    const parseId = Number(id);\r\n    if (isNaN(parseId)) {\r\n      return push(\"/\");\r\n    }\r\n\r\n    let result = null;\r\n    try {\r\n      const { isMovie } = this.state;\r\n      if (isMovie) {\r\n        ({ data: result } = await movieApi.movieDetail(parseId));\r\n      } else {\r\n        ({ data: result } = await tvApi.tvDetail(parseId));\r\n      }\r\n    } catch {\r\n      this.setState({ error: \"Can't find anything\" });\r\n    } finally {\r\n      this.setState({ result, loading: false });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { result, loading, error } = this.state;\r\n    return <DetailPresenter result={result} loading={loading} error={error} />;\r\n  }\r\n}\r\n","import React, { useEffect } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\nimport Loader from \"../../Components/Loader\";\r\nimport Message from \"../../Components/Message\";\r\nimport Section from \"../../Components/Section\";\r\nimport Poster from \"../../Components/Poster\";\r\nimport { useTitle } from \"../../Components/useTitle\";\r\n\r\nconst Container = styled.div`\r\n  padding: 20px;\r\n`;\r\n\r\nconst Backdrop = styled.div`\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 100%;\r\n  background-image: url(${(props) => props.bgImage});\r\n  background-position: center center;\r\n  background-size: cover;\r\n  filter: blur(3px);\r\n  opacity: 0.5;\r\n`;\r\n\r\nconst Title = styled.h3`\r\n  position: relative;\r\n  margin-bottom: 20px;\r\n  font-size: 32px;\r\n`;\r\n\r\nconst Content = styled.div`\r\n  display: flex;\r\n  position: relative;\r\n  width: 100%;\r\n  height: 70vh;\r\n  z-index: 1;\r\n`;\r\n\r\nconst Cover = styled.div`\r\n  width: 30%;\r\n  height: 100%;\r\n  border-radius: 5px;\r\n  background-image: url(${(props) => props.bgImage});\r\n  background-position: center center;\r\n  background-size: cover;\r\n`;\r\n\r\nconst Data = styled.div`\r\n  width: 70%;\r\n  margin-left: 10px;\r\n`;\r\n\r\nconst Overview = styled.div`\r\n  font-size: 16px;\r\n  margin-bottom: 20px;\r\n`;\r\n\r\nconst Subtitle = styled.div`\r\n  font-size: 28px;\r\n  margin-bottom: 10px;\r\n`;\r\n\r\nconst CollectionPresenter = ({ result, loading, error }) => {\r\n  const titleUpdater = useTitle(\"Loading | hMovieApp\");\r\n\r\n  useEffect(() => {\r\n    loading\r\n      ? titleUpdater(\"Loading | hMovieApp\")\r\n      : titleUpdater(`${result.name} | hMovieApp`);\r\n  }, [loading, result, titleUpdater]);\r\n\r\n  return loading ? (\r\n    <Loader />\r\n  ) : error ? (\r\n    <Message text={error} color=\"#e74c3c\"></Message>\r\n  ) : (\r\n    <Container>\r\n      {result.hasOwnProperty(\"backdrop_path\") && result.backdrop_path ? (\r\n        <Backdrop\r\n          bgImage={`https://image.tmdb.org/t/p/original${result.backdrop_path}`}\r\n        />\r\n      ) : (\r\n        <p></p>\r\n      )}\r\n      <Title>{result.name}</Title>\r\n      <Content>\r\n        <Cover\r\n          bgImage={\r\n            result.poster_path\r\n              ? `https://image.tmdb.org/t/p/original${result.poster_path}`\r\n              : require(\"../../Assets/noPoster.png\")\r\n          }\r\n        />\r\n        <Data>\r\n          <Overview>{result.overview}</Overview>\r\n          <Subtitle>Collection List</Subtitle>\r\n          {result.parts && result.parts.length > 0 && (\r\n            <Section>\r\n              {result.parts\r\n                .sort((a, b) => a[\"id\"] - b[\"id\"])\r\n                .map((movie) => (\r\n                  <Poster\r\n                    key={movie.id}\r\n                    id={movie.id}\r\n                    title={movie.original_title}\r\n                    imageUrl={movie.poster_path}\r\n                    rating={movie.vote_average}\r\n                    year={\r\n                      movie.release_date && movie.release_date.substring(0, 4)\r\n                    }\r\n                    isMovie={true}\r\n                  />\r\n                ))}\r\n            </Section>\r\n          )}\r\n        </Data>\r\n      </Content>\r\n      {error && <Message text={error} color=\"#e74c3c\" />}\r\n    </Container>\r\n  );\r\n};\r\n\r\nCollectionPresenter.propTypes = {\r\n  result: PropTypes.object,\r\n  loading: PropTypes.bool.isRequired,\r\n  error: PropTypes.string,\r\n};\r\n\r\nexport default CollectionPresenter;\r\n","import CollectionContainer from \"./CollectionContainer\";\r\n\r\nexport default CollectionContainer;\r\n","import React from \"react\";\r\nimport CollectionPresenter from \"./CollectionPresenter\";\r\nimport { movieApi } from \"../../api\";\r\n\r\nexport default class extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      result: null,\r\n      loading: true,\r\n      error: null,\r\n    };\r\n  }\r\n\r\n  async componentDidMount() {\r\n    const {\r\n      match: {\r\n        params: { id },\r\n      },\r\n      history: { push },\r\n    } = this.props;\r\n    const parseId = Number(id);\r\n    if (isNaN(parseId)) {\r\n      return push(\"/\");\r\n    }\r\n\r\n    let result = null;\r\n    try {\r\n      ({ data: result } = await movieApi.collection(parseId));\r\n    } catch {\r\n      this.setState({ error: \"Can't find collection\" });\r\n    } finally {\r\n      this.setState({ result, loading: false });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { result, loading, error } = this.state;\r\n    return (\r\n      <CollectionPresenter result={result} loading={loading} error={error} />\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\nimport Loader from \"../../Components/Loader\";\r\nimport Message from \"../../Components/Message\";\r\nimport Section from \"../../Components/Section\";\r\nimport Poster from \"../../Components/Poster\";\r\n\r\nconst Container = styled.div`\r\n  padding: 20px;\r\n`;\r\n\r\nconst Backdrop = styled.div`\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 100%;\r\n  background-image: url(${(props) => props.bgImage});\r\n  background-position: center center;\r\n  background-size: cover;\r\n  filter: blur(3px);\r\n  opacity: 0.5;\r\n`;\r\n\r\nconst Title = styled.h3`\r\n  position: relative;\r\n  margin-bottom: 20px;\r\n  font-size: 32px;\r\n`;\r\n\r\nconst Content = styled.div`\r\n  display: flex;\r\n  position: relative;\r\n  width: 100%;\r\n  height: 70vh;\r\n  z-index: 1;\r\n`;\r\n\r\nconst Cover = styled.div`\r\n  width: 30%;\r\n  height: 100%;\r\n  border-radius: 5px;\r\n  background-image: url(${(props) => props.bgImage});\r\n  background-position: center center;\r\n  background-size: cover;\r\n`;\r\n\r\nconst Data = styled.div`\r\n  width: 70%;\r\n  margin-left: 10px;\r\n`;\r\n\r\nconst Overview = styled.div`\r\n  font-size: 16px;\r\n  margin-bottom: 20px;\r\n`;\r\n\r\nconst Subtitle = styled.div`\r\n  font-size: 28px;\r\n  margin-bottom: 10px;\r\n`;\r\n\r\nconst CollectionPresenter = ({ result, loading, error }) =>\r\n  loading ? (\r\n    <Loader />\r\n  ) : error ? (\r\n    <Message text={error} color=\"#e74c3c\"></Message>\r\n  ) : (\r\n    <Container>\r\n      {result.hasOwnProperty(\"backdrop_path\") && result.backdrop_path ? (\r\n        <Backdrop\r\n          bgImage={`https://image.tmdb.org/t/p/original${result.backdrop_path}`}\r\n        />\r\n      ) : (\r\n        <p></p>\r\n      )}\r\n      <Title>{result.name}</Title>\r\n      <Content>\r\n        <Cover\r\n          bgImage={\r\n            result.poster_path\r\n              ? `https://image.tmdb.org/t/p/original${result.poster_path}`\r\n              : require(\"../../Assets/noPoster.png\")\r\n          }\r\n        />\r\n        <Data>\r\n          <Overview>{result.overview}</Overview>\r\n          <Subtitle>Episode List</Subtitle>\r\n          {result.episodes && result.episodes.length > 0 && (\r\n            <Section title=\"\">\r\n              {result.episodes.map((tv) => (\r\n                <Poster\r\n                  key={tv.id}\r\n                  id={tv.id}\r\n                  title={tv.name}\r\n                  imageUrl={tv.still_path}\r\n                  rating={tv.vote_average}\r\n                  year={tv.air_date && tv.air_date.substring(0, 4)}\r\n                  isLink={false}\r\n                />\r\n              ))}\r\n            </Section>\r\n          )}\r\n        </Data>\r\n      </Content>\r\n      {error && <Message text={error} color=\"#e74c3c\" />}\r\n    </Container>\r\n  );\r\n\r\nCollectionPresenter.propTypes = {\r\n  result: PropTypes.object,\r\n  loading: PropTypes.bool.isRequired,\r\n  error: PropTypes.string,\r\n};\r\n\r\nexport default CollectionPresenter;\r\n","import SeasonContainer from \"./SeasonContainer\";\r\n\r\nexport default SeasonContainer;\r\n","import React from \"react\";\r\nimport SeasonPresenter from \"./SeasonPresenter\";\r\nimport { tvApi } from \"../../api\";\r\n\r\nexport default class extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      result: null,\r\n      loading: true,\r\n      error: null,\r\n    };\r\n  }\r\n\r\n  async componentDidMount() {\r\n    const {\r\n      match: {\r\n        params: { id, num },\r\n      },\r\n      history: { push },\r\n    } = this.props;\r\n    const parseId = Number(id);\r\n    const parseNum = Number(num);\r\n    if (isNaN(parseId) || isNaN(parseNum)) {\r\n      return push(\"/\");\r\n    }\r\n\r\n    let result = null;\r\n    try {\r\n      ({ data: result } = await tvApi.season(parseId, parseNum));\r\n    } catch {\r\n      this.setState({ error: \"Can't find season\" });\r\n    } finally {\r\n      this.setState({ result, loading: false });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { result, loading, error } = this.state;\r\n    return <SeasonPresenter result={result} loading={loading} error={error} />;\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport {\r\n  HashRouter as Router,\r\n  Redirect,\r\n  Route,\r\n  Switch,\r\n} from \"react-router-dom\";\r\nimport Header from \"Components/Header\";\r\nimport Home from \"Routes/Home\";\r\nimport TV from \"Routes/TV\";\r\nimport Search from \"Routes/Search\";\r\nimport Detail from \"Routes/Detail\";\r\nimport Collection from \"Routes/Collection\";\r\nimport Season from \"Routes/Season\";\r\n\r\nexport default () => (\r\n  <Router>\r\n    <>\r\n      <Header />\r\n      <Switch>\r\n        <Route path=\"/\" exact component={Home} />\r\n        <Route path=\"/tv\" exact component={TV} />\r\n        <Route path=\"/search\" component={Search} />\r\n        <Route path=\"/movie/:id\" component={Detail} />\r\n        <Route path=\"/tv/:id\" exact component={Detail} />\r\n        <Route path=\"/tv/:id/season/:num\" component={Season} />\r\n        <Route path=\"/collection/:id\" component={Collection} />\r\n\r\n        <Redirect from=\"*\" to=\"/\" />\r\n      </Switch>\r\n    </>\r\n  </Router>\r\n);\r\n","import { createGlobalStyle } from \"styled-components\";\r\nimport reset from \"styled-reset\";\r\n\r\nconst globalStyles = createGlobalStyle`\r\n  ${reset};\r\n  * {\r\n    box-sizing: border-box;\r\n  }\r\n  body {\r\n    padding-top: 50px;\r\n    color: white;\r\n    background-color: rgba(20, 20, 20, 1);\r\n    font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\r\n    font-size: 14px;\r\n  }\r\n  a {\r\n    text-decoration: none;\r\n    color: inherit;\r\n  }\r\n`;\r\n\r\nexport default globalStyles;\r\n","import React from \"react\";\r\nimport Router from \"Components/Router\";\r\nimport GlobalStyles from \"Components/GlobalStyles\";\r\n\r\nfunction App() {\r\n  return (\r\n    <>\r\n      <Router />\r\n      <GlobalStyles />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"Components/App\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n"],"sourceRoot":""}