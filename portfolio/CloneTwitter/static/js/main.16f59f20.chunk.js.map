{"version":3,"sources":["fbase.js","components/Tweet.js","components/TweetFactory.js","routes/Home.js","components/AuthForm.js","routes/Auth.js","routes/Profile.js","components/Navigation.js","components/Router.js","components/App.js","index.js"],"names":["firebase","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","firebaseInstance","authService","dbService","storageService","Tweet","tweetObj","isOwner","useState","edit","setEdit","text","newTweet","setNewTweet","deleteTweet","a","window","confirm","doc","id","delete","refFromURL","attachmentUrl","toggleEdit","prev","onSubmit","event","preventDefault","update","className","type","value","placeholder","onChange","target","required","onClick","src","alt","icon","faTrash","faPencilAlt","TweetFactory","userObj","tweet","setTweet","attachment","setAttachment","attachmentRef","ref","child","uid","uuidv4","putString","response","getDownloadURL","creatorId","createdAt","Date","now","collection","add","maxLength","for","faPlus","accept","theFile","files","reader","FileReader","onloadend","result","currentTarget","readAsDataURL","style","opacity","faTimes","Home","tweets","setTweets","useEffect","onSnapshot","snapshot","tweetArray","docs","map","data","marginTop","key","AuthForm","email","setEmail","password","setPassword","newAccount","setNewAccount","error","setError","name","createUserWithEmailAndPassword","signInWithEmailAndPassword","message","onSocialClick","provider","auth","GoogleAuthProvider","signInWithPopup","faTwitter","color","size","marginBottom","faGoogle","refreshUser","displayName","newDisplayName","setNewDisplayName","history","useHistory","updateProfile","autoFocus","signOut","push","Navigation","display","justifyContent","to","marginRight","marginLeft","flexDirection","alignItems","fontSize","faUser","AppRouter","isLoggedIn","width","maxWidth","margin","exact","path","Profile","Auth","App","init","setInit","setUserObj","onAuthStateChanged","user","arg","Boolean","currentUser","ReactDOM","render","Fragment","document","getElementById"],"mappings":"4QAeAA,gBAVuB,CACrBC,OAAQC,0CACRC,WAAYD,qCACZE,YAAaF,4CACbG,UAAWH,qBACXI,cAAeJ,iCACfK,kBAAmBL,gBACnBM,MAAON,+CAKF,IAAMO,EAAmBT,EACnBU,EAAcV,SACdW,EAAYX,cACZY,EAAiBZ,Y,uCCsDfa,EArED,SAAC,GAA2B,IAAzBC,EAAwB,EAAxBA,SAAUC,EAAc,EAAdA,QAAc,EACfC,oBAAS,GADM,mBAChCC,EADgC,KAC1BC,EAD0B,OAEPF,mBAASF,EAASK,MAFX,mBAEhCC,EAFgC,KAEtBC,EAFsB,KAIjCC,EAAW,uCAAG,sBAAAC,EAAA,0DACPC,OAAOC,QAAQ,+CADR,gCAGVd,EAAUe,IAAV,iBAAwBZ,EAASa,KAAMC,SAH7B,uBAIVhB,EAAeiB,WAAWf,EAASgB,eAAeF,SAJxC,2CAAH,qDAQXG,EAAa,kBAAMb,GAAQ,SAACc,GAAD,OAAWA,MAEtCC,EAAQ,uCAAG,WAAOC,GAAP,SAAAX,EAAA,6DACfW,EAAMC,iBADS,SAETxB,EAAUe,IAAV,iBAAwBZ,EAASa,KAAMS,OAAO,CAClDjB,KAAMC,IAHO,OAKfF,GAAQ,GALO,2CAAH,sDAed,OACE,yBAAKmB,UAAU,SACZpB,EACC,oCACE,0BAAMoB,UAAU,sBAAsBJ,SAAUA,GAC9C,2BACEK,KAAK,OACLC,MAAOnB,EACPoB,YAAY,kBACZC,SAhBK,SAACP,GAAW,IAEfK,EACRL,EADFQ,OAAUH,MAEZlB,EAAYkB,IAaFI,UAAQ,IAEV,2BAAON,UAAU,UAAUC,KAAK,SAASC,MAAM,kBAEjD,0BAAMF,UAAU,oBAAoBO,QAASb,GAA7C,WAKF,oCACE,4BAAKjB,EAASK,MACbL,EAASgB,eACR,yBAAKe,IAAK/B,EAASgB,cAAegB,IAAI,qBAEvC/B,GACC,yBAAKsB,UAAU,kBACb,0BAAMO,QAAStB,GACb,kBAAC,IAAD,CAAiByB,KAAMC,OAEzB,0BAAMJ,QAASb,GACb,kBAAC,IAAD,CAAiBgB,KAAME,W,QC6BxBC,EAvFM,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QAAc,EACVnC,mBAAS,IADC,mBAC7BoC,EAD6B,KACtBC,EADsB,OAEArC,mBAAS,IAFT,mBAE7BsC,EAF6B,KAEjBC,EAFiB,KA4B9BtB,EAAQ,uCAAG,WAAOC,GAAP,qBAAAX,EAAA,yDACfW,EAAMC,iBACQ,KAAViB,EAFW,oDAMXtB,EAAgB,GACD,KAAfwB,EAPW,wBAQPE,EAAgB5C,EACnB6C,MACAC,MAFmB,UAEVP,EAAQQ,IAFE,YAEKC,gBAVd,SAWUJ,EAAcK,UAAUP,EAAY,YAX9C,cAWPQ,EAXO,iBAYSA,EAASL,IAAIM,iBAZtB,QAYbjC,EAZa,sBAcThB,EAAW,CACfkD,UAAWb,EAAQQ,IACnBxC,KAAMiC,EACNtB,gBACAmC,UAAWC,KAAKC,OAlBH,UAoBTxD,EAAUyD,WAAW,UAAUC,IAAIvD,GApB1B,QAqBfuC,EAAS,IACTE,EAAc,IAtBC,4CAAH,sDAyBd,OACE,0BAAMlB,UAAU,cAAcJ,SAAUA,GACtC,yBAAKI,UAAU,2BACb,2BACEA,UAAU,sBACVC,KAAK,OACLC,MAAOa,EACPkB,UAAW,IACX9B,YAAY,uBACZC,SA1DS,SAACP,GAAW,IAEfK,EACRL,EADFQ,OAAUH,MAEZc,EAASd,MAwDL,2BAAOD,KAAK,SAASC,MAAM,YAE7B,2BAAOF,UAAU,sBAAsBkC,IAAI,eACzC,4CACA,kBAAC,IAAD,CAAiBxB,KAAMyB,OAEzB,2BACE7C,GAAG,cACHW,KAAK,OACLmC,OAAO,UACPhC,SA/De,SAACP,GAAW,IAIzBwC,EADFxC,EADFQ,OAAUiC,MAEU,GAChBC,EAAS,IAAIC,WACnBD,EAAOE,UAAY,SAAC5C,GAAW,IAEV6C,EACf7C,EADF8C,cAAiBD,OAEnBxB,EAAcwB,IAEhBH,EAAOK,cAAcP,IAoDjBQ,MAAO,CAAEC,QAAS,KAEnB7B,GACC,yBAAKjB,UAAU,sBAAsBO,QApDhB,kBAAMW,EAAc,MAqDvC,wCACA,kBAAC,IAAD,CAAiBR,KAAMqC,SCpDlBC,EA7BF,SAAC,GAAiB,IAAflC,EAAc,EAAdA,QAAc,EACAnC,mBAAS,IADT,mBACrBsE,EADqB,KACbC,EADa,KAa5B,OAVAC,qBAAU,WACR7E,EAAUyD,WAAW,UAAUqB,YAAW,SAACC,GACzC,IAAMC,EAAaD,EAASE,KAAKC,KAAI,SAACnE,GAAD,oBACnCC,GAAID,EAAIC,IACLD,EAAIoE,WAETP,EAAUI,QAEX,IAGD,yBAAKtD,UAAU,aACb,kBAAC,EAAD,CAAcc,QAASA,IACvB,yBAAK+B,MAAO,CAAEa,UAAW,KACtBT,EAAOO,KAAI,SAACzC,GAAD,OACV,kBAAC,EAAD,CACE4C,IAAK5C,EAAMzB,GACXb,SAAUsC,EACVrC,QAASqC,EAAMY,YAAcb,EAAQQ,Y,QC8ClCsC,EArEE,WAAO,IAAD,EACKjF,mBAAS,IADd,mBACdkF,EADc,KACPC,EADO,OAEWnF,mBAAS,IAFpB,mBAEdoF,EAFc,KAEJC,EAFI,OAGerF,oBAAS,GAHxB,mBAGdsF,EAHc,KAGFC,EAHE,OAIKvF,mBAAS,IAJd,mBAIdwF,EAJc,KAIPC,EAJO,KAMfhE,EAAW,SAACP,GAAW,IAAD,EAGtBA,EADFQ,OAAUgE,EAFc,EAEdA,KAAMnE,EAFQ,EAERA,MAEL,UAATmE,EACFP,EAAS5D,GACS,aAATmE,GACTL,EAAY9D,IAIVN,EAAQ,uCAAG,WAAOC,GAAP,SAAAX,EAAA,yDACfW,EAAMC,iBADS,UAGTmE,EAHS,gCAIL5F,EAAYiG,+BAA+BT,EAAOE,GAJ7C,6CAML1F,EAAYkG,2BAA2BV,EAAOE,GANzC,yDASbK,EAAS,KAAII,SATA,0DAAH,sDAiBd,OACE,oCACE,0BAAMxE,UAAU,YAAYJ,SAAUA,GACpC,2BACEI,UAAU,YACVqE,KAAK,QACLpE,KAAK,OACLE,YAAY,QACZD,MAAO2D,EACPzD,SAAUA,EACVE,UAAQ,IAEV,2BACEN,UAAU,YACVqE,KAAK,WACLpE,KAAK,WACLE,YAAY,WACZD,MAAO6D,EACP3D,SAAUA,EACVE,UAAQ,IAEV,2BACEN,UAAU,uBACVC,KAAK,SACLC,MAAO+D,EAAa,iBAAmB,YAExCE,GAAS,0BAAMnE,UAAU,aAAamE,IAEzC,0BAAMnE,UAAU,aAAaO,QAhCX,WACpB2D,GAAc,SAACvE,GAAD,OAAWA,OAgCpBsE,EAAa,UAAY,oBC5DnB,aACb,IAAMQ,EAAa,uCAAG,WAAO5E,GAAP,eAAAX,EAAA,4DAMP,WAHTW,EADFQ,OAAUgE,OAKVK,EAAW,IAAItG,EAAiBuG,KAAKC,oBAPnB,SASdvG,EAAYwG,gBAAgBH,GATd,2CAAH,sDAYnB,OACE,yBAAK1E,UAAU,iBACb,kBAAC,IAAD,CACEU,KAAMoE,IACNC,MAAO,UACPC,KAAK,KACLnC,MAAO,CAAEoC,aAAc,MAEzB,kBAAC,EAAD,MACA,yBAAKjF,UAAU,WACb,4BAAQA,UAAU,UAAUqE,KAAK,SAAS9D,QAASkE,GAAnD,wBACuB,kBAAC,IAAD,CAAiB/D,KAAMwE,UC1BvC,cAA+B,IAA5BpE,EAA2B,EAA3BA,QAASqE,EAAkB,EAAlBA,YAAkB,EACCxG,mBAASmC,EAAQsE,aADlB,mBACpCC,EADoC,KACpBC,EADoB,KAGrCC,EAAUC,cAcV5F,EAAQ,uCAAG,WAAOC,GAAP,SAAAX,EAAA,yDACfW,EAAMC,iBACFgB,EAAQsE,cAAgBC,EAFb,gCAGPvE,EAAQ2E,cAAc,CAC1BL,YAAaC,IAJF,OAMbF,IANa,2CAAH,sDAUd,OACE,yBAAKnF,UAAU,aACb,0BAAMA,UAAU,cAAcJ,SAAUA,GACtC,2BACEI,UAAU,YACVC,KAAK,OACLC,MAAOmF,EACPlF,YAAY,eACZuF,WAAS,EACTtF,SA1BS,SAACP,GAAW,IAEfK,EACRL,EADFQ,OAAUH,MAEZoF,EAAkBpF,MAwBd,2BACEF,UAAU,UACVC,KAAK,SACLC,MAAM,iBACN2C,MAAO,CAAEa,UAAW,OAGxB,0BAAM1D,UAAU,2BAA2BO,QAxCzB,WACpBlC,EAAYsH,UACZJ,EAAQK,KAAK,OAsCX,aCZSC,EA/BI,SAAC,GAAD,IAAG/E,EAAH,EAAGA,QAAH,OACjB,6BACE,wBAAI+B,MAAO,CAAEa,UAAW,GAAIoC,QAAS,OAAQC,eAAgB,WAC3D,4BACE,kBAAC,IAAD,CAAMC,GAAG,IAAInD,MAAO,CAAEoD,YAAa,KACjC,kBAAC,IAAD,CAAiBvF,KAAMoE,IAAWC,MAAO,UAAWC,KAAK,SAG7D,4BACE,kBAAC,IAAD,CACEgB,GAAG,WACHnD,MAAO,CACLqD,WAAY,GACZJ,QAAS,OACTK,cAAe,SACfC,WAAY,SACZC,SAAU,KAGZ,kBAAC,IAAD,CAAiB3F,KAAM4F,IAAQvB,MAAO,UAAWC,KAAK,OACtD,0BAAMnC,MAAO,CAAEa,UAAW,KACvB5C,EAAQsE,YAAR,UACMtE,EAAQsE,YADd,cAEG,gBCaDmB,EAnCG,SAAC,GAA0C,IAAxCC,EAAuC,EAAvCA,WAAY1F,EAA2B,EAA3BA,QAASqE,EAAkB,EAAlBA,YACxC,OACE,kBAAC,IAAD,KACGqB,GAAc,kBAAC,EAAD,CAAY1F,QAASA,IACpC,kBAAC,IAAD,KACG0F,EACC,yBACE3D,MAAO,CACL4D,MAAO,OACPC,SAAU,IACVC,OAAQ,SACRjD,UAAW,GACXoC,QAAS,OACTC,eAAgB,WAGlB,kBAAC,IAAD,CAAOa,OAAK,EAACC,KAAK,KAChB,kBAAC,EAAD,CAAM/F,QAASA,KAEjB,kBAAC,IAAD,CAAO8F,OAAK,EAACC,KAAK,YAChB,kBAACC,EAAD,CAAShG,QAASA,EAASqE,YAAaA,MAI5C,oCACE,kBAAC,IAAD,CAAOyB,OAAK,EAACC,KAAK,KAChB,kBAACE,EAAD,WCeCC,MA5Cf,WAAgB,IAAD,EACWrI,oBAAS,GADpB,mBACNsI,EADM,KACAC,EADA,OAEiBvI,mBAAS,MAF1B,mBAENmC,EAFM,KAEGqG,EAFH,KA6Bb,OAzBAhE,qBAAU,WACR9E,EAAY+I,oBAAmB,SAACC,GAE5BF,EADEE,EACS,CACTjC,YAAaiC,EAAKjC,YAClB9D,IAAK+F,EAAK/F,IACVmE,cAAe,SAAC6B,GAAD,OAASD,EAAK5B,cAAc6B,KAGlC,MAEbJ,GAAQ,QAET,IAaD,oCACGD,EACC,kBAAC,EAAD,CACET,WAAYe,QAAQzG,GACpBA,QAASA,EACTqE,YAhBY,WAClB,IAAMkC,EAAOhJ,EAAYmJ,YAEzBL,EAAW,CACT/B,YAAaiC,EAAKjC,YAClB9D,IAAK+F,EAAK/F,IACVmE,cAAe,SAAC6B,GAAD,OAASD,EAAK5B,cAAc6B,SAazC,oB,MCrCRG,IAASC,OACP,kBAAC,IAAMC,SAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.16f59f20.chunk.js","sourcesContent":["import * as firebase from \"firebase/app\";\nimport \"firebase/auth\";\nimport \"firebase/firestore\";\nimport \"firebase/storage\";\n\nconst firebaseConfig = {\n  apiKey: process.env.REACT_APP_FIREBASE_API_KEY,\n  authDomain: process.env.REACT_APP_FIREBASE_AUTH_DOMAIN,\n  databaseURL: process.env.REACT_APP_FIREBASE_DATABASE_URL,\n  projectId: process.env.REACT_APP_FIREBASE_PROJECT_ID,\n  storageBucket: process.env.REACT_APP_FIREBASE_STORAGE_BUCKET,\n  messagingSenderId: process.env.REACT_APP_FIREBASE_MESSAGING_SENDER_ID,\n  appId: process.env.REACT_APP_FIREBASE_APP_ID,\n};\n\nfirebase.initializeApp(firebaseConfig);\n\nexport const firebaseInstance = firebase;\nexport const authService = firebase.auth();\nexport const dbService = firebase.firestore();\nexport const storageService = firebase.storage();\n","import React, { useState } from \"react\";\nimport { dbService, storageService } from \"fbase\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faTrash, faPencilAlt } from \"@fortawesome/free-solid-svg-icons\";\n\nconst Tweet = ({ tweetObj, isOwner }) => {\n  const [edit, setEdit] = useState(false);\n  const [newTweet, setNewTweet] = useState(tweetObj.text);\n\n  const deleteTweet = async () => {\n    const ok = window.confirm(\"Are you sure you want to delete this tweet?\");\n    if (ok) {\n      await dbService.doc(`tweets/${tweetObj.id}`).delete();\n      await storageService.refFromURL(tweetObj.attachmentUrl).delete();\n    }\n  };\n\n  const toggleEdit = () => setEdit((prev) => !prev);\n\n  const onSubmit = async (event) => {\n    event.preventDefault();\n    await dbService.doc(`tweets/${tweetObj.id}`).update({\n      text: newTweet,\n    });\n    setEdit(false);\n  };\n\n  const onChange = (event) => {\n    const {\n      target: { value },\n    } = event;\n    setNewTweet(value);\n  };\n\n  return (\n    <div className=\"tweet\">\n      {edit ? (\n        <>\n          <form className=\"container tweetEdit\" onSubmit={onSubmit}>\n            <input\n              type=\"text\"\n              value={newTweet}\n              placeholder=\"Edit your tweet\"\n              onChange={onChange}\n              required\n            />\n            <input className=\"formBtn\" type=\"submit\" value=\"Update Tweet\" />\n          </form>\n          <span className=\"formBtn cancelBtn\" onClick={toggleEdit}>\n            Cancel\n          </span>\n        </>\n      ) : (\n        <>\n          <h4>{tweetObj.text}</h4>\n          {tweetObj.attachmentUrl && (\n            <img src={tweetObj.attachmentUrl} alt=\"uploaded by user\" />\n          )}\n          {isOwner && (\n            <div className=\"tweet__actions\">\n              <span onClick={deleteTweet}>\n                <FontAwesomeIcon icon={faTrash} />\n              </span>\n              <span onClick={toggleEdit}>\n                <FontAwesomeIcon icon={faPencilAlt} />\n              </span>\n            </div>\n          )}\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default Tweet;\n","import React, { useState } from \"react\";\nimport { dbService, storageService } from \"fbase\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faPlus, faTimes } from \"@fortawesome/free-solid-svg-icons\";\n\nconst TweetFactory = ({ userObj }) => {\n  const [tweet, setTweet] = useState(\"\");\n  const [attachment, setAttachment] = useState(\"\");\n\n  const onChange = (event) => {\n    const {\n      target: { value },\n    } = event;\n    setTweet(value);\n  };\n\n  const onFileChange = (event) => {\n    const {\n      target: { files },\n    } = event;\n    const theFile = files[0];\n    const reader = new FileReader();\n    reader.onloadend = (event) => {\n      const {\n        currentTarget: { result },\n      } = event;\n      setAttachment(result);\n    };\n    reader.readAsDataURL(theFile);\n  };\n\n  const onRemoveAttachment = () => setAttachment(\"\");\n\n  const onSubmit = async (event) => {\n    event.preventDefault();\n    if (tweet === \"\") {\n      return;\n    }\n\n    let attachmentUrl = \"\";\n    if (attachment !== \"\") {\n      const attachmentRef = storageService\n        .ref()\n        .child(`${userObj.uid}/${uuidv4()}`);\n      const response = await attachmentRef.putString(attachment, \"data_url\");\n      attachmentUrl = await response.ref.getDownloadURL();\n    }\n    const tweetObj = {\n      creatorId: userObj.uid,\n      text: tweet,\n      attachmentUrl,\n      createdAt: Date.now(),\n    };\n    await dbService.collection(\"tweets\").add(tweetObj);\n    setTweet(\"\");\n    setAttachment(\"\");\n  };\n\n  return (\n    <form className=\"factoryForm\" onSubmit={onSubmit}>\n      <div className=\"factoryInput__container\">\n        <input\n          className=\"factoryInput__input\"\n          type=\"text\"\n          value={tweet}\n          maxLength={120}\n          placeholder=\"What's on your mind?\"\n          onChange={onChange}\n        />\n        <input type=\"submit\" value=\"&rarr;\" />\n      </div>\n      <label className=\"factoryInput__label\" for=\"attach-file\">\n        <span>Add photos</span>\n        <FontAwesomeIcon icon={faPlus} />\n      </label>\n      <input\n        id=\"attach-file\"\n        type=\"file\"\n        accept=\"image/*\"\n        onChange={onFileChange}\n        style={{ opacity: 0 }}\n      />\n      {attachment && (\n        <div className=\"factoryForm__remove\" onClick={onRemoveAttachment}>\n          <span>Remove</span>\n          <FontAwesomeIcon icon={faTimes} />\n        </div>\n      )}\n    </form>\n  );\n};\n\nexport default TweetFactory;\n","import React, { useState, useEffect } from \"react\";\nimport { dbService } from \"fbase\";\nimport Tweet from \"components/Tweet\";\nimport TweetFactory from \"components/TweetFactory\";\n\nconst Home = ({ userObj }) => {\n  const [tweets, setTweets] = useState([]);\n\n  useEffect(() => {\n    dbService.collection(\"tweets\").onSnapshot((snapshot) => {\n      const tweetArray = snapshot.docs.map((doc) => ({\n        id: doc.id,\n        ...doc.data(),\n      }));\n      setTweets(tweetArray);\n    });\n  }, []);\n\n  return (\n    <div className=\"container\">\n      <TweetFactory userObj={userObj} />\n      <div style={{ marginTop: 30 }}>\n        {tweets.map((tweet) => (\n          <Tweet\n            key={tweet.id}\n            tweetObj={tweet}\n            isOwner={tweet.creatorId === userObj.uid}\n          />\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default Home;\n","import React, { useState } from \"react\";\nimport { authService } from \"fbase\";\n\nconst AuthForm = () => {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [newAccount, setNewAccount] = useState(true);\n  const [error, setError] = useState(\"\");\n\n  const onChange = (event) => {\n    const {\n      target: { name, value },\n    } = event;\n    if (name === \"email\") {\n      setEmail(value);\n    } else if (name === \"password\") {\n      setPassword(value);\n    }\n  };\n\n  const onSubmit = async (event) => {\n    event.preventDefault();\n    try {\n      if (newAccount) {\n        await authService.createUserWithEmailAndPassword(email, password);\n      } else {\n        await authService.signInWithEmailAndPassword(email, password);\n      }\n    } catch (err) {\n      setError(err.message);\n    }\n  };\n\n  const toggleAccount = () => {\n    setNewAccount((prev) => !prev);\n  };\n\n  return (\n    <>\n      <form className=\"container\" onSubmit={onSubmit}>\n        <input\n          className=\"authInput\"\n          name=\"email\"\n          type=\"text\"\n          placeholder=\"Email\"\n          value={email}\n          onChange={onChange}\n          required\n        />\n        <input\n          className=\"authInput\"\n          name=\"password\"\n          type=\"password\"\n          placeholder=\"Password\"\n          value={password}\n          onChange={onChange}\n          required\n        />\n        <input\n          className=\"authInput authSubmit\"\n          type=\"submit\"\n          value={newAccount ? \"Create Account\" : \"Sign In\"}\n        />\n        {error && <span className=\"authError\">{error}</span>}\n      </form>\n      <span className=\"authSwitch\" onClick={toggleAccount}>\n        {newAccount ? \"Sign In\" : \"Create Account\"}\n      </span>\n    </>\n  );\n};\n\nexport default AuthForm;\n","import React from \"react\";\nimport { authService, firebaseInstance } from \"fbase\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faTwitter, faGoogle } from \"@fortawesome/free-brands-svg-icons\";\nimport AuthForm from \"components/AuthForm\";\n\nexport default () => {\n  const onSocialClick = async (event) => {\n    const {\n      target: { name },\n    } = event;\n\n    let provider;\n    if (name === \"google\") {\n      provider = new firebaseInstance.auth.GoogleAuthProvider();\n    }\n    await authService.signInWithPopup(provider);\n  };\n\n  return (\n    <div className=\"authContainer\">\n      <FontAwesomeIcon\n        icon={faTwitter}\n        color={\"#04aaff\"}\n        size=\"3x\"\n        style={{ marginBottom: 30 }}\n      />\n      <AuthForm />\n      <div className=\"authBtn\">\n        <button className=\"authBtn\" name=\"google\" onClick={onSocialClick}>\n          Continue with Google <FontAwesomeIcon icon={faGoogle} />\n        </button>\n      </div>\n    </div>\n  );\n};\n","import React, { useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { authService } from \"fbase\";\n\nexport default ({ userObj, refreshUser }) => {\n  const [newDisplayName, setNewDisplayName] = useState(userObj.displayName);\n\n  const history = useHistory();\n\n  const onLogOutClick = () => {\n    authService.signOut();\n    history.push(\"/\");\n  };\n\n  const onChange = (event) => {\n    const {\n      target: { value },\n    } = event;\n    setNewDisplayName(value);\n  };\n\n  const onSubmit = async (event) => {\n    event.preventDefault();\n    if (userObj.displayName !== newDisplayName) {\n      await userObj.updateProfile({\n        displayName: newDisplayName,\n      });\n      refreshUser();\n    }\n  };\n\n  return (\n    <div className=\"container\">\n      <form className=\"profileForm\" onSubmit={onSubmit}>\n        <input\n          className=\"formInput\"\n          type=\"text\"\n          value={newDisplayName}\n          placeholder=\"Display name\"\n          autoFocus\n          onChange={onChange}\n        />\n        <input\n          className=\"formBtn\"\n          type=\"submit\"\n          value=\"Update Profile\"\n          style={{ marginTop: 10 }}\n        />\n      </form>\n      <span className=\"formBtn cancelBtn logOut\" onClick={onLogOutClick}>\n        Log Out\n      </span>\n    </div>\n  );\n};\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faTwitter } from \"@fortawesome/free-brands-svg-icons\";\nimport { faUser } from \"@fortawesome/free-solid-svg-icons\";\n\nconst Navigation = ({ userObj }) => (\n  <nav>\n    <ul style={{ marginTop: 50, display: \"flex\", justifyContent: \"center\" }}>\n      <li>\n        <Link to=\"/\" style={{ marginRight: 10 }}>\n          <FontAwesomeIcon icon={faTwitter} color={\"#04aaff\"} size=\"2x\" />\n        </Link>\n      </li>\n      <li>\n        <Link\n          to=\"/profile\"\n          style={{\n            marginLeft: 10,\n            display: \"flex\",\n            flexDirection: \"column\",\n            alignItems: \"center\",\n            fontSize: 12,\n          }}\n        >\n          <FontAwesomeIcon icon={faUser} color={\"#04aaff\"} size=\"2x\" />\n          <span style={{ marginTop: 10 }}>\n            {userObj.displayName\n              ? `${userObj.displayName}'s Profile`\n              : \"Profile\"}\n          </span>\n        </Link>\n      </li>\n    </ul>\n  </nav>\n);\n\nexport default Navigation;\n","import React from \"react\";\nimport { HashRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Home from \"routes/Home\";\nimport Auth from \"routes/Auth\";\nimport Profile from \"routes/Profile\";\nimport Navigation from \"components/Navigation\";\n\nconst AppRouter = ({ isLoggedIn, userObj, refreshUser }) => {\n  return (\n    <Router>\n      {isLoggedIn && <Navigation userObj={userObj} />}\n      <Switch>\n        {isLoggedIn ? (\n          <div\n            style={{\n              width: \"100%\",\n              maxWidth: 890,\n              margin: \"0 auto\",\n              marginTop: 80,\n              display: \"flex\",\n              justifyContent: \"center\",\n            }}\n          >\n            <Route exact path=\"/\">\n              <Home userObj={userObj} />\n            </Route>\n            <Route exact path=\"/profile\">\n              <Profile userObj={userObj} refreshUser={refreshUser} />\n            </Route>\n          </div>\n        ) : (\n          <>\n            <Route exact path=\"/\">\n              <Auth />\n            </Route>\n          </>\n        )}\n      </Switch>\n    </Router>\n  );\n};\n\nexport default AppRouter;\n","import React, { useEffect, useState } from \"react\";\nimport AppRouter from \"components/Router\";\nimport { authService } from \"fbase\";\n\nfunction App() {\n  const [init, setInit] = useState(false);\n  const [userObj, setUserObj] = useState(null);\n\n  useEffect(() => {\n    authService.onAuthStateChanged((user) => {\n      if (user) {\n        setUserObj({\n          displayName: user.displayName,\n          uid: user.uid,\n          updateProfile: (arg) => user.updateProfile(arg),\n        });\n      } else {\n        setUserObj(null);\n      }\n      setInit(true);\n    });\n  }, []);\n\n  const refreshUser = () => {\n    const user = authService.currentUser;\n\n    setUserObj({\n      displayName: user.displayName,\n      uid: user.uid,\n      updateProfile: (arg) => user.updateProfile(arg),\n    });\n  };\n\n  return (\n    <>\n      {init ? (\n        <AppRouter\n          isLoggedIn={Boolean(userObj)}\n          userObj={userObj}\n          refreshUser={refreshUser}\n        />\n      ) : (\n        \"Initializing...\"\n      )}\n    </>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\nimport \"./styles.css\";\n\nReactDOM.render(\n  <React.Fragment>\n    <App />\n  </React.Fragment>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}